[{"title":"232.用栈实现队列","uid":"d91274a3d01b11b2d199e36958cb424f","slug":"232-用栈实现队列","date":"2022-09-12T11:50:50.000Z","updated":"2022-09-12T11:53:41.606Z","comments":true,"path":"api/articles/232-用栈实现队列.json","cover":null,"text":"232.用栈实现队列题目描述： 用栈实现队列 请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（push、pop、peek、empty）： 实现 MyQueue 类： void push(int x) 将元素 x 推到队列的末尾 int pop() 从队列的开...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":56,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":59,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":55,"path":"api/tags/leetcode.json"},{"name":"栈和队列","slug":"栈和队列","count":1,"path":"api/tags/栈和队列.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"28.实现 strStr()","uid":"92bbfd2514ed32aedece3fa7e7cce0b7","slug":"28-实现-strStr","date":"2022-09-11T14:34:12.000Z","updated":"2022-09-11T14:37:46.446Z","comments":true,"path":"api/articles/28-实现-strStr.json","cover":null,"text":"28.实现 strStr()题目描述： 实现 strStr() 实现 strStr() 函数。 给你两个字符串 haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串出现的第一个位置（下标从 0 开始）。如果不存在，则返回 -1 。 说...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":56,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":59,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":55,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"459.重复的子字符串","uid":"d3c414b58259addf0d47c58705b851eb","slug":"459-重复的子字符串","date":"2022-09-10T12:17:28.000Z","updated":"2022-09-10T12:27:25.726Z","comments":true,"path":"api/articles/459-重复的子字符串.json","cover":null,"text":"459.重复的子字符串题目描述： 重复的子字符串 给定一个非空的字符串 s ，检查是否可以通过由它的一个子串重复多次构成。 example 1: 输入: s &#x3D; &quot;abab&quot; 输出: true 解释: 可由子串 &quot;ab&quot; 重复两次...","link":"","photos":[],"count_time":{"symbolsCount":805,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":56,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":59,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":55,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true}]