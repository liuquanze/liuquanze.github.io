[{"title":"530.二叉搜索树的最小绝对值差","uid":"6226c398b825b38b91ad0079c34b0472","slug":"530-二叉搜索树的最小绝对值差","date":"2022-10-08T01:03:59.000Z","updated":"2022-10-08T01:06:27.840Z","comments":true,"path":"api/articles/530-二叉搜索树的最小绝对值差.json","cover":null,"text":"530.二叉搜索树的最小绝对值差题目描述： 二叉搜索树的最小绝对差 给你一个二叉搜索树的根节点 root ，返回 树中任意两不同节点值之间的最小差值 。 差值是一个正数，其数值等于两值之差的绝对值。 example 1： 输入：root &#x3D; [4,2,6,1,3] 输出...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":79,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":82,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":78,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":18,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"98.验证二叉搜索树","uid":"dd5945836ee2298d3cd22289ae215e69","slug":"98-验证二叉搜索树","date":"2022-10-07T00:54:24.000Z","updated":"2022-10-07T00:56:16.337Z","comments":true,"path":"api/articles/98-验证二叉搜索树.json","cover":null,"text":"98.验证二叉搜索树问题描述： 验证二叉搜索树 给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。 有效 二叉搜索树定义如下： 节点的左子树只包含 小于 当前节点的数。 节点的右子树只包含 大于 当前节点的数。 所有左子树和右子树自身必须也是二叉搜索树。 ex...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":79,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":82,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":78,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":18,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"700.二叉搜索树中的搜索","uid":"4e6e4747e1b3af852c2bcbf832cc15bd","slug":"700-二叉搜索树中的搜索","date":"2022-10-06T01:18:40.000Z","updated":"2022-10-06T01:20:43.541Z","comments":true,"path":"api/articles/700-二叉搜索树中的搜索.json","cover":null,"text":"700.二叉搜索树中的搜索题目描述： 二叉搜索树中的搜索 给定二叉搜索树（BST）的根节点 root 和一个整数值 val。 你需要在 BST 中找到节点值等于 val 的节点。 返回以该节点为根的子树。 如果节点不存在，则返回 null 。 example 1： 输入：root...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":79,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":82,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":78,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":18,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true}]