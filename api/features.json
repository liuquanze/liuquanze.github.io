[{"title":"669.修剪二叉搜索树","uid":"c848947e0d06736e666ae1e637df0270","slug":"669-修剪二叉搜索树","date":"2022-10-16T03:19:25.000Z","updated":"2022-10-16T03:24:18.886Z","comments":true,"path":"api/articles/669-修剪二叉搜索树.json","cover":null,"text":"669.修剪二叉搜索树题目描述： 修剪二叉搜索树 给你二叉搜索树的根节点 root ，同时给定最小边界low 和最大边界 high。通过修剪二叉搜索树，使得所有节点的值在[low, high]中。修剪树 不应该 改变保留在树中的元素的相对结构 (即，如果没有被移除，原有的父代子代...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":85,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":88,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":84,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":24,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"450.删除二叉搜索树中的节点","uid":"4ddc27e8ab5fa8f62bf22aca925f034e","slug":"450-删除二叉搜索树中的节点","date":"2022-10-15T03:25:12.000Z","updated":"2022-10-15T03:28:21.883Z","comments":true,"path":"api/articles/450-删除二叉搜索树中的节点.json","cover":null,"text":"450.删除二叉搜索树中的节点题目描述： 删除二叉搜索树中的节点 给定一个二叉搜索树的根节点 root 和一个值 key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。 一般来说，删除节点可分为两个步骤： 首先找...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":85,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":88,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":84,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":24,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"701.二叉搜索树中的插入操作","uid":"de679446ce90a96213f1c24b7dcd05cc","slug":"701-二叉搜索树中的插入操作","date":"2022-10-12T02:51:28.000Z","updated":"2022-10-12T02:55:13.376Z","comments":true,"path":"api/articles/701-二叉搜索树中的插入操作.json","cover":null,"text":"701.二叉搜索树中的插入操作题目描述： 二叉搜索树中的插入操作 给定二叉搜索树（BST）的根节点 root 和要插入树中的值 value ，将值插入二叉搜索树。 返回插入后二叉搜索树的根节点。 输入数据 保证 ，新值和原始二叉搜索树中的任意节点值都不同。 注意，可能存在多种有效...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":85,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":88,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":84,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":24,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true}]