[{"title":"93.复原IP地址","uid":"2aa2b4cd6cd10ccd2f6292d5d41a250c","slug":"93-复原IP地址","date":"2022-11-05T13:47:14.000Z","updated":"2022-11-05T13:49:44.476Z","comments":true,"path":"api/articles/93-复原IP地址.json","cover":null,"text":"93.复原IP地址问题描述： 复原 IP 地址 有效 IP 地址 正好由四个整数（每个整数位于 0 到 255 之间组成，且不能含有前导 0），整数之间用 &#39;.&#39; 分隔。 例如：&quot;0.1.2.201&quot; 和 &quot;192.168.1.1&q...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":94,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":97,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":93,"path":"api/tags/leetcode.json"},{"name":"回溯算法","slug":"回溯算法","count":7,"path":"api/tags/回溯算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"131.分割回文串","uid":"db70d191ef5306eb761eb483c7e9bb07","slug":"131-分割回文串","date":"2022-11-02T15:20:26.000Z","updated":"2022-11-02T15:25:51.208Z","comments":true,"path":"api/articles/131-分割回文串.json","cover":null,"text":"131.分割回文串题目描述： 分割回文串 给你一个字符串 s，请你将 s 分割成一些子串，使每个子串都是 回文串 。返回 s 所有可能的分割方案。 回文串 是正着读和反着读都一样的字符串。 example 1： 输入：s &#x3D; &quot;aab&quot; 输出：[[&...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":94,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":97,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":93,"path":"api/tags/leetcode.json"},{"name":"回溯算法","slug":"回溯算法","count":7,"path":"api/tags/回溯算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"40.组合总和Ⅱ","uid":"4363deb7c8d6dd57ce4b7c0757c5e038","slug":"40-组合总和Ⅱ","date":"2022-10-31T15:16:14.000Z","updated":"2022-10-31T15:19:28.101Z","comments":true,"path":"api/articles/40-组合总和Ⅱ.json","cover":null,"text":"40.组合总和Ⅱ题目描述： 组合总和 II 给定一个候选人编号的集合 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。 candidates 中的每个数字在每个组合中只能使用 一次 。 注意：解集不能包含...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":94,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":97,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":93,"path":"api/tags/leetcode.json"},{"name":"回溯算法","slug":"回溯算法","count":7,"path":"api/tags/回溯算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true}]