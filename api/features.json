[{"title":"110.平衡二叉树","uid":"21a7b5849c8515778a333234cc58b5b6","slug":"110-平衡二叉树","date":"2022-09-27T14:53:38.000Z","updated":"2022-09-27T14:56:16.541Z","comments":true,"path":"api/articles/110-平衡二叉树.json","cover":null,"text":"110.平衡二叉树题目描述： 平衡二叉树 给定一个二叉树，判断它是否是高度平衡的二叉树。 本题中，一棵高度平衡二叉树定义为： 一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1 。 example 1: 输入：root &#x3D; [3,9,20,null,null,...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":7,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"222.完全二叉树的节点个数","uid":"576c683ca9399adeb9bce96faa97dac2","slug":"222-完全二叉树的节点个数","date":"2022-09-25T14:17:21.000Z","updated":"2022-09-25T14:21:06.711Z","comments":true,"path":"api/articles/222-完全二叉树的节点个数.json","cover":null,"text":"222.完全二叉树的节点个数题目描述： 完全二叉树的节点个数 给你一棵 完全二叉树 的根节点 root ，求出该树的节点个数。 完全二叉树 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":7,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"111.二叉树的最小深度","uid":"5e70057312954f6211ec72bb65eb479c","slug":"111-二叉树的最小深度","date":"2022-09-24T14:45:07.000Z","updated":"2022-09-24T14:55:20.004Z","comments":true,"path":"api/articles/111-二叉树的最小深度.json","cover":null,"text":"111.二叉树的最小深度问题描述： 二叉树的最小深度 给定一个二叉树，找出其最小深度。 最小深度是从根节点到最近叶子节点的最短路径上的节点数量。 说明：叶子节点是指没有子节点的节点。 example 1: 输入：root &#x3D; [3,9,20,null,null,15,7...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":7,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true}]