[{"id":"b11e16d08ad1418b22f0f4722489b2fa","title":"Kth Largest Element in an Array——堆排序","content":"Kth Largest Element in an Array——堆排序题目描述：Given an integer array nums and an integer k, return the kth largest element in the array.\nNote that it is the kth largest element in the sorted order, not the kth distinct element.\nYou must solve it in O(n) time complexity.\n题解：class Solution &#123;\n    public int findKthLargest(int[] nums, int k) &#123;\n        &#x2F;&#x2F;堆的大小\n        int heapSize&#x3D;nums.length;\n        &#x2F;&#x2F;初始建立大根堆\n        buildMaxHeap(nums,heapSize);\n        &#x2F;&#x2F;取出堆顶元素，置换到堆底，再对置换完成的堆进行调整\n        for(int i&#x3D;nums.length-1;i&gt;&#x3D;nums.length-k+1;i--)&#123;\n            swap(nums,0,i);\n            adjustHeap(nums,0,--heapSize);\n        &#125;\n        &#x2F;&#x2F;返回第k次调整的堆顶元素\n        return nums[0];\n    &#125;\n    &#x2F;&#x2F;初始建堆\n    public void buildMaxHeap(int[] nums,int heapSize)&#123;\n        &#x2F;&#x2F;找到第一个非叶节点，不断下坠\n        for(int i&#x3D;heapSize&#x2F;2;i&gt;&#x3D;0;i--)&#123;\n            adjustHeap(nums,i,heapSize);\n        &#125;\n    &#125;\n\t&#x2F;&#x2F;堆调整\n    public void adjustHeap(int[] nums,int i,int heapSize)&#123;\n        &#x2F;&#x2F;创建指针分别指向i节点的左右孩子节点\n        int left&#x3D;i*2+1;\n        int right&#x3D;i*2+2;\n        int largest&#x3D;i;\n        &#x2F;&#x2F;通过两次判断，将largest指针指向最大节点\n        if(left&lt;heapSize&amp;&amp;nums[left]&gt;nums[largest])&#123;\n            largest&#x3D;left;\n        &#125;\n        if(right&lt;heapSize&amp;&amp;nums[right]&gt;nums[largest])&#123;\n            largest&#x3D;right;\n        &#125;\n        &#x2F;&#x2F;若不符合大根堆要求，则进行调整\n        if(largest!&#x3D;i)&#123;\n            swap(nums,largest,i);\n            adjustHeap(nums,largest,heapSize);\n        &#125;\n    &#125;\n\n    public void swap(int[] nums,int left,int right)&#123;\n        int temp&#x3D;nums[left];\n        nums[left]&#x3D;nums[right];\n        nums[right]&#x3D;temp;\n    &#125;\n\n&#125;\n\n\n\n","slug":"FindKthLargest01","date":"2022-07-21T00:45:06.000Z","categories_index":"数据结构与算法","tags_index":"Java,leetcode","author_index":"LiuQuanZe"},{"id":"124012fd83870b9daa284761d75f9454","title":"找到第k大的元素——快速排序","content":"Kth Largest Element in an Array——快速排序题目描述：Given an integer array nums and an integer k, return the kth largest element in the array.\nNote that it is the kth largest element in the sorted order, not the kth distinct element.\nYou must solve it in O(n) time complexity.\n题解：class Solution &#123;\n    public int findKthLargest(int[] nums, int k) &#123;\n        return fastSelection(nums,0,nums.length-1,k-1);\t&#x2F;&#x2F;注意，传入的参数是nums.length-1和k-1\n    &#125;\n\t&#x2F;&#x2F;快速排序，递归\n    public int fastSelection(int[] nums,int start,int end,int kth)&#123;\n        &#x2F;&#x2F;划分并确定一个元素的位置\n        int cur&#x3D;partition(nums,start,end);\n        &#x2F;&#x2F;若为第k个元素，则直接返回\n        if(cur&#x3D;&#x3D;kth)&#123;\n            return nums[cur];\n        &#125;else if(cur&lt;kth)&#123;\t\t&#x2F;&#x2F;否则对右边区域进行划分\n            return fastSelection(nums,cur+1,end,kth);\n        &#125;else&#123;\t\t\t\t&#x2F;&#x2F;对左边区域进行划分\n            return fastSelection(nums,start,cur-1,kth);\n        &#125;\n    &#125;\n\t&#x2F;&#x2F;划分区间\n    public int partition(int[] nums,int start,int end)&#123;\n       \t &#x2F;&#x2F;随机选择枢轴元素\n        int pivot&#x3D;start+(int)(Math.random()*(end-start+1));\n        &#x2F;&#x2F;将枢轴元素调换至右边界\n        swap(nums,pivot,end);\n        &#x2F;&#x2F;双指针index和i用于进行划分，确定枢轴元素的最终位置\n        int index&#x3D;start-1;\n        for(int i&#x3D;start;i&lt;end;i++)&#123;\n            if(nums[i]&gt;nums[end])&#123;\n                swap(nums,i,++index);\n            &#125;\n        &#125;\n        swap(nums,++index,end);\n        return index;\n    &#125;\n\n    public void swap(int[] nums,int left,int right)&#123;\n        int temp&#x3D;nums[left];\n        nums[left]&#x3D;nums[right];\n        nums[right]&#x3D;temp;\n    &#125;\n\n&#125;\n\n\n\n","slug":"FindKthLargest","date":"2022-07-21T00:24:42.000Z","categories_index":"数据结构与算法","tags_index":"Java,leetcode","author_index":"LiuQuanZe"},{"id":"2233f52546249f8733475a932932ac4d","title":"PriorityQueue的简单使用","content":"Java中的优先队列Java中的PriorityQueue默认是小顶堆，逻辑上是堆，物理上是数组，每次取出的元素是最小的。【可以通过比较器的方式传入不同的比较规则】\n特点：\n实现了Queue接口\n不允许放入null元素\n插入方法：\nadd()和offer(),前者插入失败抛出异常，后者插入失败返回false。\n\n\n获取堆顶元素：\nelement()和peek():都是获取堆顶元素，前者获取失败抛出异常，后者返回null\n\n\n获取并删除队首元素：\nremove()和poll()都是获取并删除队首元素，前者失败抛出异常，后者失败返回null。\n\n\n\n构造：\n构造小顶堆\n\nPriorityQueue small&#x3D;new PriorityQueue&lt;&gt;();\n\n\n构造大顶堆\n\nPriorityQueue big&#x3D;new PriorityQueue&lt;&gt;(Collections.reverseOrder());\n&#x2F;&#x2F;使用比较器构造大顶堆\nPriorityQueue&lt;int[]&gt; queue&#x3D;new PriorityQueue&lt;&gt;(new Comparator&lt;int[]&gt;() &#123;\n\tpublic int compare(int[] m, int[] n) &#123;\n\t\treturn m[1] - n[1];\n\t&#125;\n&#125;);\n   \n","slug":"PriorityQueue_SimpleUse","date":"2022-07-20T03:10:24.000Z","categories_index":"","tags_index":"Java,数据结构","author_index":"LiuQuanZe"},{"id":"0147aaa7b5bc889d40916e1f2d1d947a","title":"Hexo添加标签和分类","content":"如何在Hexo中添加分类和标签？分类：\n创建分类选项：\n生成【分类页】，并添加type属性\n\n\n\nhexo new page categories\n\n\n执行成功：\n\nINFO  Created: H:\\blog\\source\\categories\\index.md\n\n\n根据上述路径，找到index.md,添加type和layout：\n\ntitle: categories\ndate: 2022-07-19 16:16:46\ntype: &quot;categories&quot;\nlayout: &quot;categories&quot;\n\n\n保存并关闭index.md\n使用categories：\n\ntitle: Console失效\ndate: 2022-07-19 16:02:42\ncategories: \n- web前端\ntags:\n- Vue\n- 报错\n\n\n\n标签：\n创建标签选项：\n生成【标签页】，并添加type属性\n\n\n\nhexo new page tags\n\n\n执行成功：\n\nINFO  Created: H:\\blog\\source\\tags\\index.md\n\n\n根据上述路径，找到index.md,添加type和layout：\n\ntitle: 文章分类\ndate: 2022-01-07 22:53:43\ntype: &quot;tags&quot;\nlayout: &quot;tags&quot;\n\n\n保存并关闭index.md\n使用tags：\n\ntitle: Console失效\ndate: 2022-07-19 16:02:42\ncategories: \n- web前端\ntags:\n- Vue\n- 报错\n\n\n\n\n\n\n\n","slug":"HexoTagsAndCategories","date":"2022-07-19T08:18:19.000Z","categories_index":"个人博客","tags_index":"Hexo,使用说明","author_index":"LiuQuanZe"},{"id":"85d7f0ee0105da9c47f8cfa58c2659ee","title":"Console失效","content":"console.log()失效问题描述：当使用console.log()想要打印到控制台时，发现idea出现下滑红线，并且num run serve也通不过。\n错误信息：ESLint: Unexpected console statement.(no-console)\n\n\n\n解决办法：进行简单的配置即可：\n在package.json的eslintConfig:{}中的”rules”:{}，增加一行代码【”no-console”: “off”】\n&quot;rules&quot;: &#123;\n  &quot;no-console&quot;:&quot;off&quot;\n&#125;,\n\n","slug":"CannotUseConsole","date":"2022-07-19T08:02:42.000Z","categories_index":"web前端","tags_index":"Vue,报错","author_index":"LiuQuanZe"},{"id":"ea91dec26a5ee2422c404ab47e32c3f7","title":"Ryu的Rest API初体验","content":"ryu.app.ofctl_restryu.app.ofctl_rest provides REST APIs for retrieving the switch stats and Updating the switch stats. This application helps you debug your application and get various statistics.\n【其实就是ryu自己提供的一个应用程序，提供了获取交换机状态以及更新交换机状态的REST APIs。该应用可以帮助我们debug自己创建的应用并获取各种统计数据】\n \n\n\n\n\nThis application supports OpenFlow version 1.0, 1.2, 1.3, 1.4 and 1.5.\n【支持OpenFlow版本 1.0 1.2 1.3 1.4和1.5】\n使用\n将ofctl_rest和simple_switch_13.py一起启动\n\n\n\n启动拓扑\n\n\n\n另起一个终端，进行请求发送，测试接口\n\n\n\n其余接口尚未测试，该接口响应成功，响应结果是否正确要看具体实验情况。\n\n【注】使用的是python3，则需要修改ofctl_rest源码：\n\n第133行：\n\n#原本\nbody&#x3D;json.dumps(dps)\n#改为\nbody &#x3D; json.dumps(list(dps)).encode(&quot;utf-8&quot;)\n\n\n若是python2，则应该不需要修改，运行时不会报错\n\n","slug":"ofctlrest","date":"2022-07-18T03:52:22.000Z","categories_index":"SDN","tags_index":"使用方法,科研","author_index":"LiuQuanZe"},{"id":"03e1cda0baa3a649921c8af01fed4d68","title":"我的第一篇博客","content":"第一篇博客哈哈，我有自己的博客啦！\n","slug":"demo01","date":"2022-07-17T11:25:30.216Z","categories_index":"个人","tags_index":"记录,日常","author_index":"LiuQuanZe"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-07-17T09:52:14.472Z","categories_index":"","tags_index":"","author_index":"LiuQuanZe"}]