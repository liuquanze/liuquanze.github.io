{"total":81,"pageSize":12,"pageCount":7,"data":[{"title":"232.用栈实现队列","uid":"d91274a3d01b11b2d199e36958cb424f","slug":"232-用栈实现队列","date":"2022-09-12T11:50:50.000Z","updated":"2022-09-12T11:53:41.606Z","comments":true,"path":"api/articles/232-用栈实现队列.json","cover":null,"text":"232.用栈实现队列题目描述： 用栈实现队列 请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（push、pop、peek、empty）： 实现 MyQueue 类： void push(int x) 将元素 x 推到队列的末尾 int pop() 从队列的开...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"栈和队列","slug":"栈和队列","count":6,"path":"api/tags/栈和队列.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"28.实现 strStr()","uid":"92bbfd2514ed32aedece3fa7e7cce0b7","slug":"28-实现-strStr","date":"2022-09-11T14:34:12.000Z","updated":"2022-09-11T14:37:46.446Z","comments":true,"path":"api/articles/28-实现-strStr.json","cover":null,"text":"28.实现 strStr()题目描述： 实现 strStr() 实现 strStr() 函数。 给你两个字符串 haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串出现的第一个位置（下标从 0 开始）。如果不存在，则返回 -1 。 说...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"459.重复的子字符串","uid":"d3c414b58259addf0d47c58705b851eb","slug":"459-重复的子字符串","date":"2022-09-10T12:17:28.000Z","updated":"2022-09-10T12:27:25.726Z","comments":true,"path":"api/articles/459-重复的子字符串.json","cover":null,"text":"459.重复的子字符串题目描述： 重复的子字符串 给定一个非空的字符串 s ，检查是否可以通过由它的一个子串重复多次构成。 example 1: 输入: s &#x3D; &quot;abab&quot; 输出: true 解释: 可由子串 &quot;ab&quot; 重复两次...","link":"","photos":[],"count_time":{"symbolsCount":805,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"剑指Offer58-II.左旋转字符串","uid":"2416193f75be6eeb61e08489a1aa53a0","slug":"剑指Offer58-II-左旋转字符串","date":"2022-09-07T13:28:59.000Z","updated":"2022-09-07T13:31:09.531Z","comments":true,"path":"api/articles/剑指Offer58-II-左旋转字符串.json","cover":null,"text":"剑指Offer58-II.左旋转字符串题目描述：剑指 Offer 58 - II. 左旋转字符串 字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串”abcdefg”和数字2，该函数将返回左旋转两位得到的结果...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"151.反转字符串中的单词","uid":"bf3e3be4adc10fbd226da035ce8a9591","slug":"151-反转字符串中的单词","date":"2022-09-06T13:39:09.000Z","updated":"2022-09-06T13:42:34.894Z","comments":true,"path":"api/articles/151-反转字符串中的单词.json","cover":null,"text":"151.反转字符串中的单词题目描述： 反转字符串中的单词 给你一个字符串 s ，请你反转字符串中 单词 的顺序。 单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。 返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。 注意：输入字符串...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"05.替换空格","uid":"e719937f6951d143569f327df963f42d","slug":"05-替换空格","date":"2022-09-05T14:29:42.000Z","updated":"2022-09-05T14:35:56.634Z","comments":true,"path":"api/articles/05-替换空格.json","cover":null,"text":"05.替换空格题目描述：剑指 Offer 05. 替换空格 请实现一个函数，把字符串 s 中的每个空格替换成”%20”。 example 1: 输入：s &#x3D; &quot;We are happy.&quot; 输出：&quot;We%20are%20happy.&quo...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"541.反转字符串Ⅱ","uid":"097e37183692c086b0f10d951c3da4e4","slug":"541-反转字符串Ⅱ","date":"2022-09-03T13:23:56.000Z","updated":"2022-09-03T13:25:57.390Z","comments":true,"path":"api/articles/541-反转字符串Ⅱ.json","cover":null,"text":"541.反转字符串Ⅱ题目描述： 反转字符串 II 给定一个字符串 s 和一个整数 k，从字符串开头算起，每计数至 2k 个字符，就反转这 2k 字符中的前 k 个字符。 如果剩余字符少于 k 个，则将剩余字符全部反转。 如果剩余字符小于 2k 但大于或等于 k 个，则反转前 k ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"344.反转字符串","uid":"db3930f2bf194d71c39748bb27ba1de2","slug":"344-反转字符串","date":"2022-09-02T13:55:52.000Z","updated":"2022-09-02T13:57:51.486Z","comments":true,"path":"api/articles/344-反转字符串.json","cover":null,"text":"344.反转字符串题目描述： 反转字符串 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。 不要给另外的数组分配额外的空间，你必须**原地修改输入数组**、使用 O(1) 的额外空间解决这一问题。 example 1: 输入：s &#x3D; ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"15.三数之和","uid":"6402807c619d1044cedb6c34299402ec","slug":"15-三数之和","date":"2022-08-31T01:40:26.000Z","updated":"2022-08-31T01:42:55.797Z","comments":true,"path":"api/articles/15-三数之和.json","cover":null,"text":"15.三数之和题目描述： 三数之和 给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"454.四数相加Ⅱ","uid":"d39f1cd0e2f648b0b919de3afe262477","slug":"454-四数相加Ⅱ","date":"2022-08-31T01:01:44.000Z","updated":"2022-08-31T01:07:26.665Z","comments":true,"path":"api/articles/454-四数相加Ⅱ.json","cover":null,"text":"454.四数相加Ⅱ题目描述： 四数相加 II 给你四个整数数组 nums1、nums2、nums3 和 nums4 ，数组长度都是 n ，请你计算有多少个元组 (i, j, k, l) 能满足： 0 &lt;= i, j, k, l &lt; n nums1[i] + nums2...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"202.快乐数","uid":"b036e493bdd6ef884e6984b888ff5e94","slug":"202-快乐数","date":"2022-08-29T13:03:42.000Z","updated":"2022-08-29T13:09:26.645Z","comments":true,"path":"api/articles/202-快乐数.json","cover":null,"text":"202.快乐数题目描述： 快乐数 编写一个算法来判断一个数 n 是不是快乐数。 「快乐数」 定义为： 对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。 然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。 如果这个过程 结果为 1，那么这个数就...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"349.两个数组的交集","uid":"c18601503540d5650db70b6721599b9d","slug":"349-两个数组的交集","date":"2022-08-29T12:47:57.000Z","updated":"2022-08-29T12:50:21.782Z","comments":true,"path":"api/articles/349-两个数组的交集.json","cover":null,"text":"349.两个数组的交集题目描述： 两个数组的交集 给定两个数组 nums1 和 nums2 ，返回 它们的交集 。输出结果中的每个元素一定是 唯一 的。我们可以 不考虑输出结果的顺序 。 example 1: 输入：nums1 &#x3D; [1,2,2,1], nums2 &#...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":67,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":70,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":66,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}