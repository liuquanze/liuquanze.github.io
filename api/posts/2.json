{"total":76,"pageSize":12,"pageCount":7,"data":[{"title":"05.替换空格","uid":"e719937f6951d143569f327df963f42d","slug":"05-替换空格","date":"2022-09-05T14:29:42.000Z","updated":"2022-09-05T14:35:56.634Z","comments":true,"path":"api/articles/05-替换空格.json","cover":null,"text":"05.替换空格题目描述：剑指 Offer 05. 替换空格 请实现一个函数，把字符串 s 中的每个空格替换成”%20”。 example 1: 输入：s &#x3D; &quot;We are happy.&quot; 输出：&quot;We%20are%20happy.&quo...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"541.反转字符串Ⅱ","uid":"097e37183692c086b0f10d951c3da4e4","slug":"541-反转字符串Ⅱ","date":"2022-09-03T13:23:56.000Z","updated":"2022-09-03T13:25:57.390Z","comments":true,"path":"api/articles/541-反转字符串Ⅱ.json","cover":null,"text":"541.反转字符串Ⅱ题目描述： 反转字符串 II 给定一个字符串 s 和一个整数 k，从字符串开头算起，每计数至 2k 个字符，就反转这 2k 字符中的前 k 个字符。 如果剩余字符少于 k 个，则将剩余字符全部反转。 如果剩余字符小于 2k 但大于或等于 k 个，则反转前 k ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"344.反转字符串","uid":"db3930f2bf194d71c39748bb27ba1de2","slug":"344-反转字符串","date":"2022-09-02T13:55:52.000Z","updated":"2022-09-02T13:57:51.486Z","comments":true,"path":"api/articles/344-反转字符串.json","cover":null,"text":"344.反转字符串题目描述： 反转字符串 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。 不要给另外的数组分配额外的空间，你必须**原地修改输入数组**、使用 O(1) 的额外空间解决这一问题。 example 1: 输入：s &#x3D; ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"15.三数之和","uid":"6402807c619d1044cedb6c34299402ec","slug":"15-三数之和","date":"2022-08-31T01:40:26.000Z","updated":"2022-08-31T01:42:55.797Z","comments":true,"path":"api/articles/15-三数之和.json","cover":null,"text":"15.三数之和题目描述： 三数之和 给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"454.四数相加Ⅱ","uid":"d39f1cd0e2f648b0b919de3afe262477","slug":"454-四数相加Ⅱ","date":"2022-08-31T01:01:44.000Z","updated":"2022-08-31T01:07:26.665Z","comments":true,"path":"api/articles/454-四数相加Ⅱ.json","cover":null,"text":"454.四数相加Ⅱ题目描述： 四数相加 II 给你四个整数数组 nums1、nums2、nums3 和 nums4 ，数组长度都是 n ，请你计算有多少个元组 (i, j, k, l) 能满足： 0 &lt;= i, j, k, l &lt; n nums1[i] + nums2...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"202.快乐数","uid":"b036e493bdd6ef884e6984b888ff5e94","slug":"202-快乐数","date":"2022-08-29T13:03:42.000Z","updated":"2022-08-29T13:09:26.645Z","comments":true,"path":"api/articles/202-快乐数.json","cover":null,"text":"202.快乐数题目描述： 快乐数 编写一个算法来判断一个数 n 是不是快乐数。 「快乐数」 定义为： 对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。 然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。 如果这个过程 结果为 1，那么这个数就...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"349.两个数组的交集","uid":"c18601503540d5650db70b6721599b9d","slug":"349-两个数组的交集","date":"2022-08-29T12:47:57.000Z","updated":"2022-08-29T12:50:21.782Z","comments":true,"path":"api/articles/349-两个数组的交集.json","cover":null,"text":"349.两个数组的交集题目描述： 两个数组的交集 给定两个数组 nums1 和 nums2 ，返回 它们的交集 。输出结果中的每个元素一定是 唯一 的。我们可以 不考虑输出结果的顺序 。 example 1: 输入：nums1 &#x3D; [1,2,2,1], nums2 &#...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"242.有效的字母异位词","uid":"4b837d23486a4c7408641cab9ca86e52","slug":"242-有效的字母异位词","date":"2022-08-28T13:00:21.000Z","updated":"2022-08-28T13:05:14.925Z","comments":true,"path":"api/articles/242-有效的字母异位词.json","cover":null,"text":"242.有效的字母异位词题目描述： 有效的字母异位词 给定两个字符串 *s* 和 *t* ，编写一个函数来判断 *t* 是否是 *s* 的字母异位词。 注意：若 *s* 和 *t* 中每个字符出现的次数都相同，则称 *s* 和 *t* 互为字母异位词。 example 1： 输入...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"哈希表","slug":"哈希表","count":4,"path":"api/tags/哈希表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"142.环形链表Ⅱ","uid":"3775c9e904a11de6ad41f14528d2779f","slug":"142-环形链表Ⅱ","date":"2022-08-27T12:12:23.000Z","updated":"2022-08-27T12:18:55.647Z","comments":true,"path":"api/articles/142-环形链表Ⅱ.json","cover":null,"text":"142.环形链表Ⅱ题目描述： 环形链表 II 给定一个链表的头节点 head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。 如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"24.两两交换链表中的节点","uid":"997023f756e83c602ad393bfa331d66a","slug":"24-两两交换链表中的节点","date":"2022-08-24T14:35:56.000Z","updated":"2022-08-24T14:47:27.759Z","comments":true,"path":"api/articles/24-两两交换链表中的节点.json","cover":null,"text":"24.两两交换链表中的节点题目描述： 两两交换链表中的节点 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。 example1: 输入：head &#x3D; [1,2,3,4] 输出：[2,1,...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"206.反转链表","uid":"04d169a11d3cee4253a53c23de1dbd14","slug":"206-反转链表","date":"2022-08-23T13:56:14.000Z","updated":"2022-08-24T14:48:10.396Z","comments":true,"path":"api/articles/206-反转链表.json","cover":null,"text":"206.反转链表题目描述： 反转链表 给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。 example 1: 输入：head &#x3D; [1,2,3,4,5] 输出：[5,4,3,2,1] example 2: 输入：head &#x3D; [1,2] 输出...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":62,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":65,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":61,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"Python语法错误01","uid":"aa4d739c1ac4e9cbdf52b62c4e456ed6","slug":"Python语法错误01","date":"2022-08-23T07:42:40.000Z","updated":"2022-08-23T07:52:45.870Z","comments":true,"path":"api/articles/Python语法错误01.json","cover":null,"text":"Python语法错误01#出现语法错误一般是python版本问题，解决方案一般是两种 &quot;&quot;&quot; 1.修改python版本 2.修改代码语法 &quot;&quot;&quot; 1.except Exception, e: 语法无效except Exc...","link":"","photos":[],"count_time":{"symbolsCount":550,"symbolsTime":"1 mins."},"categories":[{"name":"实验","slug":"实验","count":1,"path":"api/categories/实验.json"}],"tags":[{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"},{"name":"语法错误","slug":"语法错误","count":1,"path":"api/tags/语法错误.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}