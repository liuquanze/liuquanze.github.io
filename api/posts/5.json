{"total":82,"pageSize":12,"pageCount":7,"data":[{"title":"寻找峰值","uid":"d84518667e657cd3814bae0fb73c941b","slug":"寻找峰值","date":"2022-08-08T03:00:38.000Z","updated":"2022-08-08T03:03:05.770Z","comments":true,"path":"api/articles/寻找峰值.json","cover":null,"text":"162. 寻找峰值题目描述：162. 寻找峰值峰值元素是指其值严格大于左右相邻值的元素。 给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。 你可以假设 nums[-1] = nums[n] = -∞ 。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"第一个错误版本","uid":"37fafcaad932621c324a857d69f2ce34","slug":"第一个错误版本","date":"2022-08-08T02:00:30.000Z","updated":"2022-08-08T02:10:52.932Z","comments":true,"path":"api/articles/第一个错误版本.json","cover":null,"text":"278.第一个错误版本题目描述：278. 第一个错误的版本你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。 假设你有 n 个版本 [1, 2, ..., n]...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"搜索旋转排序数组","uid":"ea76d2e3b8ba7df05f2a9007a5c4d57e","slug":"搜索旋转排序数组","date":"2022-08-07T02:54:15.000Z","updated":"2022-08-07T02:57:32.605Z","comments":true,"path":"api/articles/搜索旋转排序数组.json","cover":null,"text":"33. 搜索旋转排序数组题目描述：33. 搜索旋转排序数组整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知的某个下标 k（0 &lt;= k &lt; nums.length）上进行了 旋转，使数组变为 [nums[k], nums...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2022-08-07T02:30:53.375Z","updated":"2022-07-17T11:23:40.487Z","comments":true,"path":"api/articles/hello-world.json","cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"我的第一篇博客","uid":"03e1cda0baa3a649921c8af01fed4d68","slug":"demo01","date":"2022-08-07T02:30:53.353Z","updated":"2022-07-19T08:29:35.422Z","comments":true,"path":"api/articles/demo01.json","cover":null,"text":"第一篇博客哈哈，我有自己的博客啦！ ","link":"","photos":[],"count_time":{"symbolsCount":18,"symbolsTime":"1 mins."},"categories":[{"name":"个人","slug":"个人","count":1,"path":"api/categories/个人.json"}],"tags":[{"name":"记录","slug":"记录","count":1,"path":"api/tags/记录.json"},{"name":"日常","slug":"日常","count":1,"path":"api/tags/日常.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"有序数组的单一元素","uid":"5a834cb8bdd34deef00d023624eeeb11","slug":"有序数组的单一元素","date":"2022-08-06T02:23:53.000Z","updated":"2022-08-06T02:26:09.675Z","comments":true,"path":"api/articles/有序数组的单一元素.json","cover":null,"text":"540. 有序数组的单一元素题目描述： 给你一个仅由整数组成的有序数组，其中每个元素都会出现两次，唯有一个数只会出现一次。 请你找出并返回只出现一次的那个数。 你设计的解决方案必须满足 O(log n) 时间复杂度和 O(1) 空间复杂度。 example 1： 输入: nums...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"Pycharm模块不存在","uid":"bf9943093888157a40e49bab81aa424f","slug":"Pycharm模块不存在","date":"2022-08-05T02:33:06.000Z","updated":"2022-08-05T02:39:34.666Z","comments":true,"path":"api/articles/Pycharm模块不存在.json","cover":null,"text":"Pycharm模块不存在问题描述：当运行Python文件时，出现以下报错： python中已经用pip安装了某模块，但pycharm中为什么仍然显示没有该模块 出现原因：pycharm里面自带一个Python解释器，而这个里面是没有几个模块的。因为咱们在DOS命令行里面下载的模块...","link":"","photos":[],"count_time":{"symbolsCount":571,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"报错","slug":"报错","count":3,"path":"api/tags/报错.json"},{"name":"Pycharm","slug":"Pycharm","count":1,"path":"api/tags/Pycharm.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"寻找比目标字母大的最小字母","uid":"d776ea82847944d1f9a7d73d3912befe","slug":"寻找比目标字母大的最小字母","date":"2022-08-05T01:53:07.000Z","updated":"2022-08-06T01:49:47.773Z","comments":true,"path":"api/articles/寻找比目标字母大的最小字母.json","cover":null,"text":"744. 寻找比目标字母大的最小字母题目描述：给你一个排序后的字符列表 letters ，列表中只包含小写英文字母。另给出一个目标字母 target，请你寻找在这一有序列表里比目标字母大的最小字母。 在比较时，字母是依序循环出现的。举个例子： 如果目标字母 target &#x3...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"x的平方根","uid":"3b8822123bb08af7e60b15ed39819f81","slug":"x的平方根","date":"2022-08-04T01:36:47.000Z","updated":"2022-08-06T03:39:18.130Z","comments":true,"path":"api/articles/x的平方根.json","cover":null,"text":"69. x的平方根题目描述：给你一个非负整数 x ，计算并返回 x 的 算术平方根 。 由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。 注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。 example 1: 输入...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"划分字母区间","uid":"b3d8a41da3eeb7700876b944e097bd03","slug":"划分字母区间","date":"2022-08-03T02:16:17.000Z","updated":"2022-08-03T02:18:46.609Z","comments":true,"path":"api/articles/划分字母区间.json","cover":null,"text":"763.划分字母区间题目描述：763. 划分字母区间字符串 S 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一字母最多出现在一个片段中。返回一个表示每个字符串片段的长度的列表。 example 1: 输入：S &#x3D; &quot;ababcbacadefegd...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"最大子数组和","uid":"f6c56b941ed067956656bab8c3d0bb61","slug":"最大子数组和","date":"2022-08-02T01:22:15.000Z","updated":"2022-08-02T01:26:05.471Z","comments":true,"path":"api/articles/最大子数组和.json","cover":null,"text":"最大子数组和题目描述： 最大子数组和 给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 子数组 是数组中的一个连续部分。 example 1: 输入：nums &#x3D; [-2,1,-3,4,-1,2,1,-5,4] ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"非递减数列","uid":"ec406ffdb14348b593a8eaccf18d5ae3","slug":"非递减数列","date":"2022-08-01T02:10:59.000Z","updated":"2022-08-01T02:13:53.891Z","comments":true,"path":"api/articles/非递减数列.json","cover":null,"text":"非递减数列题目描述：665. 非递减数列难度中等681收藏分享切换为英文接收动态反馈 给你一个长度为 n 的整数数组 nums ，请你判断在 最多 改变 1 个元素的情况下，该数组能否变成一个非递减数列。 我们是这样定义一个非递减数列的： 对于数组中任意的 i (0 &lt;= ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":68,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":71,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":67,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}