{"total":113,"pageSize":12,"pageCount":10,"data":[{"title":"Python语法错误01","uid":"aa4d739c1ac4e9cbdf52b62c4e456ed6","slug":"Python语法错误01","date":"2022-08-23T07:42:40.000Z","updated":"2022-08-23T07:52:45.870Z","comments":true,"path":"api/articles/Python语法错误01.json","cover":null,"text":"Python语法错误01#出现语法错误一般是python版本问题，解决方案一般是两种 &quot;&quot;&quot; 1.修改python版本 2.修改代码语法 &quot;&quot;&quot; 1.except Exception, e: 语法无效except Exc...","link":"","photos":[],"count_time":{"symbolsCount":550,"symbolsTime":"1 mins."},"categories":[{"name":"实验","slug":"实验","count":1,"path":"api/categories/实验.json"}],"tags":[{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"},{"name":"语法错误","slug":"语法错误","count":1,"path":"api/tags/语法错误.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"203.移除链表元素","uid":"e036cd89658c33624bfd31dd2060c058","slug":"203-移除链表元素","date":"2022-08-20T01:35:04.000Z","updated":"2022-08-20T01:37:27.376Z","comments":true,"path":"api/articles/203-移除链表元素.json","cover":null,"text":"203.移除链表元素题目描述： 移除链表元素 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 example 1: 输入：head &#x3D; [1,2,6,3,4,5,6], val &...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"416.分割等和子集","uid":"be7f5c6dc71f9de739df383de800893c","slug":"416-分割等和子集","date":"2022-08-20T01:04:47.000Z","updated":"2022-08-20T01:11:13.233Z","comments":true,"path":"api/articles/416-分割等和子集.json","cover":null,"text":"416.分割等和子集题目描述： 分割等和子集 给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。 example 1: 输入：nums &#x3D; [1,5,11,5] 输出：true 解释：数组可以分割成 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"59.螺旋矩阵Ⅱ","uid":"fb852bf52649b6773513d798310ccbeb","slug":"59-螺旋矩阵Ⅱ","date":"2022-08-19T12:59:09.000Z","updated":"2022-08-19T13:01:10.824Z","comments":true,"path":"api/articles/59-螺旋矩阵Ⅱ.json","cover":null,"text":"59.螺旋矩阵Ⅱ题目描述： 螺旋矩阵 II 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。 example 1: 输入：n &#x3D; 3 输出：[[1,2,3],[8,9,4],[7,6,5]...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"209.长度最小的子数组","uid":"3e8eaaf0906092af7ecd3983c1cdcff1","slug":"209-长度最小的子数组","date":"2022-08-19T12:21:28.000Z","updated":"2022-08-19T12:24:53.929Z","comments":true,"path":"api/articles/209-长度最小的子数组.json","cover":null,"text":"209.长度最小的子数组题目描述： 长度最小的子数组 给定一个含有 n 个正整数的数组和一个正整数 target 。 找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"ERROR 2003 (HY000) Can't connect to MySQL server on 'localhost:3306' (10061)","uid":"34cb425e734202379d2ace9dc721620a","slug":"连接mysql失败","date":"2022-08-18T04:11:34.000Z","updated":"2022-08-18T04:18:27.251Z","comments":true,"path":"api/articles/连接mysql失败.json","cover":null,"text":"ERROR 2003 (HY000): Can’t connect to MySQL server on ‘localhost:3306’ (10061)问题描述：mysql -uroot -p 输入上传命令之后，出现标题上的错误。 数据库无法成功连接 解决方案： 打开win搜索...","link":"","photos":[],"count_time":{"symbolsCount":175,"symbolsTime":"1 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":1,"path":"api/categories/后端开发.json"}],"tags":[{"name":"报错","slug":"报错","count":3,"path":"api/tags/报错.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"977.有序数组的平方","uid":"15073fb27fca9b3ab97a6db7836c4a4d","slug":"977-有序数组的平方","date":"2022-08-17T22:41:02.000Z","updated":"2022-08-17T22:46:02.610Z","comments":true,"path":"api/articles/977-有序数组的平方.json","cover":null,"text":"977.有序数组的平方题目描述： 有序数组的平方 给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。 example 1: 输入：nums &#x3D; [-4,-1,0,3,10] 输出：[0,1,9,16,100...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"01 bag","uid":"dcd5a30d05960c310201068cc050e1d7","slug":"01-bag","date":"2022-08-17T03:09:15.000Z","updated":"2022-08-17T03:11:51.217Z","comments":true,"path":"api/articles/01-bag.json","cover":null,"text":"01背包问题题目描述：有n件物品和一个最多能背重量为w 的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。每件物品只能用一次，求解将哪些物品装入背包里物品价值总和最大。 这样其实是没有从底向上去思考，而是习惯性想到了背包，那么暴力的解法应该是怎么样的呢...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"96.不同的二叉搜索树","uid":"eea51d59bc355db9bbe09ae2654e00b2","slug":"96-不同的二叉搜索树","date":"2022-08-16T03:04:40.000Z","updated":"2022-08-16T03:06:47.875Z","comments":true,"path":"api/articles/96-不同的二叉搜索树.json","cover":null,"text":"96.不同的二叉搜索树题目描述： 不同的二叉搜索树 给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。 example 1: 输入：n &#x3D; 3 输出：5 example 2: 输入：n &...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"343.整数拆分","uid":"6d961b2ba2212b262ffda24ad1b8896a","slug":"343-整数拆分","date":"2022-08-15T02:23:02.000Z","updated":"2022-08-15T02:25:11.605Z","comments":true,"path":"api/articles/343-整数拆分.json","cover":null,"text":"343.整数拆分题目描述： 整数拆分 给定一个正整数 n ，将其拆分为 k 个 正整数 的和（ k &gt;= 2 ），并使这些整数的乘积最大化。 返回 你可以获得的最大乘积 。 example 1: 输入: n &#x3D; 2 输出: 1 解释: 2 &#x3D; 1 + 1...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"63.不同路径Ⅱ","uid":"4c356b6b38bff815cbd4488ea4093633","slug":"63-不同路径Ⅱ","date":"2022-08-14T02:53:19.000Z","updated":"2022-08-14T02:55:56.829Z","comments":true,"path":"api/articles/63-不同路径Ⅱ.json","cover":null,"text":"63.不同路径Ⅱ题目描述： 不同路径 II 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish”）。 现在考虑网格中有障碍物。那么从左上角到右下...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"62.爬楼梯","uid":"0469ba4c963055a01468ddd6a005bdd0","slug":"62-爬楼梯","date":"2022-08-14T02:00:07.000Z","updated":"2022-08-14T02:13:04.740Z","comments":true,"path":"api/articles/62-爬楼梯.json","cover":null,"text":"62.爬楼梯题目描述： 不同路径 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。 问总共有多少条不同的路径？ example 1: ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":97,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":102,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":96,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}