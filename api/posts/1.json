{"total":98,"pageSize":12,"pageCount":9,"data":[{"title":"450.删除二叉搜索树中的节点","uid":"4ddc27e8ab5fa8f62bf22aca925f034e","slug":"450-删除二叉搜索树中的节点","date":"2022-10-15T03:25:12.000Z","updated":"2022-10-15T03:28:21.883Z","comments":true,"path":"api/articles/450-删除二叉搜索树中的节点.json","cover":null,"text":"450.删除二叉搜索树中的节点题目描述： 删除二叉搜索树中的节点 给定一个二叉搜索树的根节点 root 和一个值 key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。 一般来说，删除节点可分为两个步骤： 首先找...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"701.二叉搜索树中的插入操作","uid":"de679446ce90a96213f1c24b7dcd05cc","slug":"701-二叉搜索树中的插入操作","date":"2022-10-12T02:51:28.000Z","updated":"2022-10-12T02:55:13.376Z","comments":true,"path":"api/articles/701-二叉搜索树中的插入操作.json","cover":null,"text":"701.二叉搜索树中的插入操作题目描述： 二叉搜索树中的插入操作 给定二叉搜索树（BST）的根节点 root 和要插入树中的值 value ，将值插入二叉搜索树。 返回插入后二叉搜索树的根节点。 输入数据 保证 ，新值和原始二叉搜索树中的任意节点值都不同。 注意，可能存在多种有效...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"236.二叉搜索树的最近公共祖先","uid":"2f59e63c36776555eba1dd17097990fc","slug":"236-二叉搜索树的最近公共祖先","date":"2022-10-11T03:12:26.000Z","updated":"2022-10-11T03:14:52.266Z","comments":true,"path":"api/articles/236-二叉搜索树的最近公共祖先.json","cover":null,"text":"236.二叉搜索树的最近公共祖先题目描述： 二叉搜索树的最近公共祖先 给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"236.二叉树的最近公共祖先","uid":"601c51b501c0367e52192a7f2085d7dc","slug":"236-二叉树的最近公共祖先","date":"2022-10-10T08:16:57.000Z","updated":"2022-10-10T08:19:39.138Z","comments":true,"path":"api/articles/236-二叉树的最近公共祖先.json","cover":null,"text":"236.二叉树的最近公共祖先题目描述： 二叉树的最近公共祖先 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖先的定义为：“对于有根树 T 的两个节点 p、q，最近公共祖先表示为一个节点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"501.二叉搜索树中的众数","uid":"4292498269ab452abce6e693ac1873b6","slug":"501-二叉搜索树中的众数","date":"2022-10-09T01:46:39.000Z","updated":"2022-10-09T01:48:34.411Z","comments":true,"path":"api/articles/501-二叉搜索树中的众数.json","cover":null,"text":"501.二叉搜索树中的众数题目描述： 二叉搜索树中的众数 给你一个含重复值的二叉搜索树（BST）的根节点 root ，找出并返回 BST 中的所有 众数（即，出现频率最高的元素）。 如果树中有不止一个众数，可以按 任意顺序 返回。 假定 BST 满足如下定义： 结点左子树中所含节...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"530.二叉搜索树的最小绝对值差","uid":"6226c398b825b38b91ad0079c34b0472","slug":"530-二叉搜索树的最小绝对值差","date":"2022-10-08T01:03:59.000Z","updated":"2022-10-08T01:06:27.840Z","comments":true,"path":"api/articles/530-二叉搜索树的最小绝对值差.json","cover":null,"text":"530.二叉搜索树的最小绝对值差题目描述： 二叉搜索树的最小绝对差 给你一个二叉搜索树的根节点 root ，返回 树中任意两不同节点值之间的最小差值 。 差值是一个正数，其数值等于两值之差的绝对值。 example 1： 输入：root &#x3D; [4,2,6,1,3] 输出...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"98.验证二叉搜索树","uid":"dd5945836ee2298d3cd22289ae215e69","slug":"98-验证二叉搜索树","date":"2022-10-07T00:54:24.000Z","updated":"2022-10-07T00:56:16.337Z","comments":true,"path":"api/articles/98-验证二叉搜索树.json","cover":null,"text":"98.验证二叉搜索树问题描述： 验证二叉搜索树 给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。 有效 二叉搜索树定义如下： 节点的左子树只包含 小于 当前节点的数。 节点的右子树只包含 大于 当前节点的数。 所有左子树和右子树自身必须也是二叉搜索树。 ex...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"700.二叉搜索树中的搜索","uid":"4e6e4747e1b3af852c2bcbf832cc15bd","slug":"700-二叉搜索树中的搜索","date":"2022-10-06T01:18:40.000Z","updated":"2022-10-06T01:20:43.541Z","comments":true,"path":"api/articles/700-二叉搜索树中的搜索.json","cover":null,"text":"700.二叉搜索树中的搜索题目描述： 二叉搜索树中的搜索 给定二叉搜索树（BST）的根节点 root 和一个整数值 val。 你需要在 BST 中找到节点值等于 val 的节点。 返回以该节点为根的子树。 如果节点不存在，则返回 null 。 example 1： 输入：root...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"617.合并二叉树","uid":"df36dac409def39859c6c978ff85b201","slug":"617-合并二叉树","date":"2022-10-05T01:34:50.000Z","updated":"2022-10-05T01:37:39.793Z","comments":true,"path":"api/articles/617-合并二叉树.json","cover":null,"text":"617.合并二叉树题目描述： 合并二叉树 给你两棵二叉树： root1 和 root2 。 想象一下，当你将其中一棵覆盖到另一棵之上时，两棵树上的一些节点将会重叠（而另一些不会）。你需要将这两棵树合并成一棵新二叉树。合并的规则是：如果两个节点重叠，那么将这两个节点的值相加作为合并...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"654.最大二叉树","uid":"de48b7aad10b18e063971ae0b35f5843","slug":"654-最大二叉树","date":"2022-10-04T01:34:03.000Z","updated":"2022-10-04T01:38:04.962Z","comments":true,"path":"api/articles/654-最大二叉树.json","cover":null,"text":"654.最大二叉树题目描述： 最大二叉树 给定一个不重复的整数数组 nums 。 最大二叉树 可以用下面的算法从 nums 递归地构建: 创建一个根节点，其值为 nums 中的最大值。 递归地在最大值 左边 的 子数组前缀上 构建左子树。 递归地在最大值 右边 的 子数组后缀上 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"106. 从中序与后序遍历序列构造二叉树","uid":"1dd4eb0dc067f1daee6408ed548f50e5","slug":"106-从中序与后序遍历序列构造二叉树","date":"2022-10-03T12:53:13.000Z","updated":"2022-10-03T13:37:34.390Z","comments":true,"path":"api/articles/106-从中序与后序遍历序列构造二叉树.json","cover":null,"text":"106.从中序与后序遍历序列构造二叉树题目描述： 从中序与后序遍历序列构造二叉树 给定两个整数数组 inorder 和 postorder ，其中 inorder 是二叉树的中序遍历， postorder 是同一棵树的后序遍历，请你构造并返回这颗 二叉树 。 example 1:...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"105. 从前序与中序遍历序列构造二叉树","uid":"26c4b1d62f73766a69fff244a3f35602","slug":"105-从前序与中序遍历序列构造二叉树","date":"2022-10-03T12:52:58.000Z","updated":"2022-10-03T13:28:17.504Z","comments":true,"path":"api/articles/105-从前序与中序遍历序列构造二叉树.json","cover":null,"text":"105.从前序与中序遍历序列构造二叉树题目描述： 从前序与中序遍历序列构造二叉树 给定两个整数数组 preorder 和 inorder ，其中 preorder 是二叉树的先序遍历， inorder 是同一棵树的中序遍历，请构造二叉树并返回其根节点。 example 1: 输入...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":84,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":87,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":83,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":23,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}