{"title":"452.用最少数量的箭引爆气球","uid":"e4f64fdd68d0e2cde5cecce7c3e76096","slug":"452-用最少数量的箭引爆气球","date":"2022-12-20T12:00:52.000Z","updated":"2022-12-20T12:03:07.557Z","comments":true,"path":"api/articles/452-用最少数量的箭引爆气球.json","keywords":null,"cover":null,"content":"<h1 id=\"452-用最少数量的箭引爆气球\"><a href=\"#452-用最少数量的箭引爆气球\" class=\"headerlink\" title=\"452.用最少数量的箭引爆气球\"></a>452.用最少数量的箭引爆气球</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><ol start=\"452\">\n<li>用最少数量的箭引爆气球</li>\n</ol>\n<p>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 <code>points</code> ，其中<code>points[i] = [xstart, xend]</code> 表示水平直径在 <code>xstart</code> 和 <code>xend</code>之间的气球。你不知道气球的确切 y 坐标。</p>\n<p>一支弓箭可以沿着 x 轴从不同点 <strong>完全垂直</strong> 地射出。在坐标 <code>x</code> 处射出一支箭，若有一个气球的直径的开始和结束坐标为 <code>x``start</code>，<code>x``end</code>， 且满足  <code>xstart ≤ x ≤ x``end</code>，则该气球会被 <strong>引爆</strong> 。可以射出的弓箭的数量 <strong>没有限制</strong> 。 弓箭一旦被射出之后，可以无限地前进。</p>\n<p>给你一个数组 <code>points</code> ，<em>返回引爆所有气球所必须射出的 <strong>最小</strong> 弓箭数</em> 。</p>\n<p>example 1：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：points &#x3D; [[10,16],[2,8],[1,6],[7,12]]\n输出：2\n解释：气球可以用2支箭来爆破:\n-在x &#x3D; 6处射出箭，击破气球[2,8]和[1,6]。\n-在x &#x3D; 11处发射箭，击破气球[10,16]和[7,12]。</code></pre>\n\n<p>example 2：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：points &#x3D; [[1,2],[3,4],[5,6],[7,8]]\n输出：4\n解释：每个气球需要射出一支箭，总共需要4支箭。</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：points &#x3D; [[1,2],[2,3],[3,4],[4,5]]\n输出：2\n解释：气球可以用2支箭来爆破:\n- 在x &#x3D; 2处发射箭，击破气球[1,2]和[2,3]。\n- 在x &#x3D; 4处射出箭，击破气球[3,4]和[4,5]。</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>1 &lt;= points.length &lt;= 105</code></li>\n<li><code>points[i].length == 2</code></li>\n<li><code>-231 &lt;= xstart &lt; xend &lt;= 231 - 1</code></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/description/\">https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/description/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int findMinArrowShots(int[][] points) &#123;\n        Arrays.sort(points,(a,b)-&gt;Integer.compare(a[0],b[0]));\n\n        &#x2F;&#x2F;初始状态最少需要一根箭\n        int arrowNum&#x3D;1;\n        for(int i&#x3D;1;i&lt;points.length;i++)&#123;\n            &#x2F;&#x2F;若两个气球没有交集，则需要加一根箭，因为之前那根箭只能射穿之前重叠的所有气球\n            if(points[i][0]&gt;points[i-1][1])&#123;\n                arrowNum++;\n            &#125;else&#123;      &#x2F;&#x2F;若两个气球是有交集的，那么就需要改变一下当前遍历气球的右边界，右边界取当前右边界和上一个气球右边界的最小值，之所以这么选是因为，取最小值可以保证这一支箭可以把所有重叠的气球都射穿，如果不对右边界进行更新，则只能保证气球之间两两重叠，无法保证所有发生重叠的气球都可以使用一只箭矢射穿\n                points[i][1]&#x3D;Math.min(points[i-1][1],points[i][1]);\n\n            &#125;\n\n        &#125;\n        return arrowNum;\n    &#125;\n&#125;</code></pre>\n\n","text":"452.用最少数量的箭引爆气球题目描述： 用最少数量的箭引爆气球 有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 points ，其中points[i] = [xstart, xend] 表示水平直径在 xstart 和 xend之间的气球。你不知道...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":107,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":113,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":107,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":13,"path":"api/tags/贪心算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83\"><span class=\"toc-text\">452.用最少数量的箭引爆气球</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"435.无重叠区间","uid":"839a3a8f14077c9f4a60c6ddbc52816e","slug":"435-无重叠区间","date":"2022-12-21T14:23:54.000Z","updated":"2022-12-21T14:26:37.687Z","comments":true,"path":"api/articles/435-无重叠区间.json","keywords":null,"cover":null,"text":"435.无重叠区间题目描述： 无重叠区间 给定一个区间的集合 intervals ，其中 intervals[i] = [starti, endi] 。返回 需要移除区间的最小数量，使剩余区间互不重叠 。 example 1： 输入: intervals &#x3D; [[1,2...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":107,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":113,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":107,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":13,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"406.根据身高重建队列","uid":"6d39faed18394c3054176cba486feae5","slug":"406-根据身高重建队列","date":"2022-12-19T13:34:04.000Z","updated":"2022-12-19T13:37:49.949Z","comments":true,"path":"api/articles/406-根据身高重建队列.json","keywords":null,"cover":null,"text":"406.根据身高重建队列题目描述 根据身高重建队列 假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] = [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":107,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":113,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":107,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":13,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}