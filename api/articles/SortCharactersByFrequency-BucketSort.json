{"title":"Sort Characters By Frequency_桶排序","uid":"28e06c560ccb367ab8fe61d12d122120","slug":"SortCharactersByFrequency-BucketSort","date":"2022-07-21T03:08:16.000Z","updated":"2022-07-21T03:10:47.828Z","comments":true,"path":"api/articles/SortCharactersByFrequency-BucketSort.json","keywords":null,"cover":null,"content":"<h1 id=\"Sort-Characters-By-Frequency——桶排序\"><a href=\"#Sort-Characters-By-Frequency——桶排序\" class=\"headerlink\" title=\"Sort Characters By Frequency——桶排序\"></a>Sort Characters By Frequency——桶排序</h1><h1 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h1><p>Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.</p>\n<p>Return the sorted string. If there are multiple answers, return any of them.</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Input: s &#x3D; &quot;tree&quot;\nOutput: &quot;eert&quot;\nExplanation: &#39;e&#39; appears twice while &#39;r&#39; and &#39;t&#39; both appear once.\nSo &#39;e&#39; must appear before both &#39;r&#39; and &#39;t&#39;. Therefore &quot;eetr&quot; is also a valid answer.</code></pre>\n\n\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Input: s &#x3D; &quot;cccaaa&quot;\nOutput: &quot;aaaccc&quot;\nExplanation: Both &#39;c&#39; and &#39;a&#39; appear three times, so both &quot;cccaaa&quot; and &quot;aaaccc&quot; are valid answers.\nNote that &quot;cacaca&quot; is incorrect, as the same characters must be together.</code></pre>\n\n\n\n\n\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public String frequencySort(String s) &#123;\n        &#x2F;&#x2F;创建map存储字符及其出现次数\n        Map&lt;Character,Integer&gt; map&#x3D;new HashMap&lt;&gt;();\n        int max_frequency&#x3D;0;\n        int frequency&#x3D;0;\n        char ch&#x3D;&#39; &#39;;\n        for(int i&#x3D;0;i&lt;s.length();i++)&#123;\n            ch&#x3D;s.charAt(i);\n            map.put(ch,map.getOrDefault(ch,0)+1);\n            max_frequency&#x3D;Math.max(max_frequency,map.get(ch));\n        &#125;\n\n        &#x2F;&#x2F;创建buckets，并初始化buckets\n        StringBuffer[] buckets&#x3D;new StringBuffer[max_frequency+1];\n        for(int i&#x3D;0;i&lt;max_frequency+1;i++)&#123;\n            buckets[i]&#x3D;new StringBuffer();\n        &#125;\n        for(Map.Entry&lt;Character,Integer&gt; entry:map.entrySet())&#123;\n            ch&#x3D;entry.getKey();\n            frequency&#x3D;entry.getValue();\n            buckets[frequency].append(ch);\n        &#125;\n        &#x2F;&#x2F;创建返回值\n        StringBuffer ret&#x3D;new StringBuffer();\n        &#x2F;&#x2F;添加返回值\n        for(int i&#x3D;max_frequency;i&gt;&#x3D;1;i--)&#123;\n            StringBuffer bucket&#x3D;buckets[i];\n            for(int j&#x3D;0;j&lt;bucket.length();j++)&#123;\n                for(int k&#x3D;0;k&lt;i;k++)&#123;\n                    ret.append(bucket.charAt(j));\n                &#125;\n            &#125;\n\n        &#125;\n        return ret.toString();\n\n\n    &#125;\n&#125;</code></pre>\n\n","text":"Sort Characters By Frequency——桶排序题目描述：Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":87,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":90,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":86,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Sort-Characters-By-Frequency%E2%80%94%E2%80%94%E6%A1%B6%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">Sort Characters By Frequency——桶排序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Vue中localStorage的简单使用","uid":"c4515973a08e01e147ab3e57422101e1","slug":"localStorage","date":"2022-07-21T12:09:11.000Z","updated":"2022-07-21T12:25:59.599Z","comments":true,"path":"api/articles/localStorage.json","keywords":null,"cover":null,"text":"Vue中localStorage的简单使用localStorage主要作为本地存储来使用。下面记录三个主要用法： 存储数据 localStorage.setItem(&#39;key&#39;,&#39;value&#39;) 取出数据 localStorage.getItem(...","link":"","photos":[],"count_time":{"symbolsCount":254,"symbolsTime":"1 mins."},"categories":[{"name":"WEB前端","slug":"WEB前端","count":1,"path":"api/categories/WEB前端.json"}],"tags":[{"name":"Vue","slug":"Vue","count":3,"path":"api/tags/Vue.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"Bucket Sort","uid":"47c6968c5ee85e81112866938362b070","slug":"BucketSort","date":"2022-07-21T02:51:39.000Z","updated":"2022-07-21T02:57:04.319Z","comments":true,"path":"api/articles/BucketSort.json","keywords":null,"cover":null,"text":"桶排序介绍：&#x2F;* 桶排序是一个排序算法，工作原理是将数组分到有限数量的桶中。 每个桶内再进行个别排序（可以使用其他不同的排序算法实现）。 *&#x2F; 基本步骤： 设定一个基准，将待排序的数据按照一定的范围，从小到大平均分搭配N个桶中，此时，桶与桶之间已经排好序了，但...","link":"","photos":[],"count_time":{"symbolsCount":191,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":87,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":90,"path":"api/tags/Java.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}