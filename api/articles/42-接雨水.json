{"title":"42.接雨水","uid":"dd718835733ef3d35103f48df96ec332","slug":"42-接雨水","date":"2023-01-25T03:29:06.000Z","updated":"2023-01-25T03:33:01.335Z","comments":true,"path":"api/articles/42-接雨水.json","keywords":null,"cover":null,"content":"<h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><ol start=\"42\">\n<li>接雨水</li>\n</ol>\n<p>给定 <code>n</code> 个非负整数表示每个宽度为 <code>1</code> 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水</p>\n<p>example1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：height &#x3D; [0,1,0,2,1,0,1,3,2,1,2,1]\n输出：6\n解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 </code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：height &#x3D; [4,2,0,3,2,5]\n输出：9</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>n == height.length</code></li>\n<li><code>1 &lt;= n &lt;= 2 * 104</code></li>\n<li><code>0 &lt;= height[i] &lt;= 105</code></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/trapping-rain-water/description/\">https://leetcode.cn/problems/trapping-rain-water/description/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;动态规划，若不使用动态规划，则在每一次求左右最大柱子高度的时候都需要在两边进行遍历，时间复杂度较高\nclass Solution &#123;\n    public int trap(int[] height) &#123;\n        int length &#x3D; height.length;\n        if (length &lt;&#x3D; 2) return 0;\n        &#x2F;&#x2F;相当于两个dp数组，dp[i]表示i位置当前位置及其左边元素中的最大元素\n        int[] maxLeft &#x3D; new int[length];\n        int[] maxRight &#x3D; new int[length];\n        \n        &#x2F;&#x2F; 记录每个柱子左边柱子最大高度\n        maxLeft[0] &#x3D; height[0];\n        for (int i &#x3D; 1; i&lt; length; i++) maxLeft[i] &#x3D; Math.max(height[i], maxLeft[i-1]);\n        \n        &#x2F;&#x2F; 记录每个柱子右边柱子最大高度\n        maxRight[length - 1] &#x3D; height[length - 1];\n        for(int i &#x3D; length - 2; i &gt;&#x3D; 0; i--) maxRight[i] &#x3D; Math.max(height[i], maxRight[i+1]);\n        \n        &#x2F;&#x2F; 求和\n        &#x2F;&#x2F;根据列来求总的雨水量，每一列的雨水量&#x3D;（min(左边最大柱子高度，右边最高的柱子高度)-当前位置的柱子高度）*柱子宽度\n        &#x2F;&#x2F;从头遍历每一列，然后求出每一列的雨水量进行累加即可\n        int sum &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; length; i++) &#123;\n            int count &#x3D; Math.min(maxLeft[i], maxRight[i]) - height[i];\n            if (count &gt; 0) sum +&#x3D; count;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre>\n\n\n\n","text":"题目描述： 接雨水 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水 example1: 输入：height &#x3D; [0,1,0,2,1,0,1,3,2,1,2,1] 输出：6 解释：上面是由数组 [0,1,0,2,1,0,...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构和算法","slug":"数据结构和算法","count":3,"path":"api/categories/数据结构和算法.json"}],"tags":[{"name":"Java","slug":"Java","count":123,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":14,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":115,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"84.柱状图中最大的矩形","uid":"5ddbb467241068095a0f1672c50c32fb","slug":"84-柱状图中最大的矩形","date":"2023-01-26T03:16:19.000Z","updated":"2023-01-26T03:18:31.822Z","comments":true,"path":"api/articles/84-柱状图中最大的矩形.json","keywords":null,"cover":null,"text":"84.柱状图中最大的矩形题目描述： 柱状图中最大的矩形 给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。 求在该柱状图中，能够勾勒出来的矩形的最大面积。 example 1: 输入：heights &#x3D; [2,1,5,6,2,3] ...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":114,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":123,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":14,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":115,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"496.下一个更大元素Ⅰ","uid":"815fb5e337edfb9e9850c316ed81cdac","slug":"496-下一个更大元素Ⅰ","date":"2023-01-23T04:22:44.000Z","updated":"2023-01-23T04:25:12.781Z","comments":true,"path":"api/articles/496-下一个更大元素Ⅰ.json","keywords":null,"cover":null,"text":"496.下一个更大元素Ⅰ问题描述： 下一个更大元素 I nums1 中数字 x 的 下一个更大元素 是指 x 在 nums2 中对应位置 右侧 的 第一个 比 x 大的元素。 给你两个 没有重复元素 的数组 nums1 和 nums2 ，下标从 0 开始计数，其中nums1 是 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":114,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":123,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":115,"path":"api/tags/leetcode.json"},{"name":"单调栈","slug":"单调栈","count":2,"path":"api/tags/单调栈.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}