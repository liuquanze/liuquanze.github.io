{"title":"209.长度最小的子数组","uid":"3e8eaaf0906092af7ecd3983c1cdcff1","slug":"209-长度最小的子数组","date":"2022-08-19T12:21:28.000Z","updated":"2022-08-19T12:24:53.929Z","comments":true,"path":"api/articles/209-长度最小的子数组.json","keywords":null,"cover":null,"content":"<h1 id=\"209-长度最小的子数组\"><a href=\"#209-长度最小的子数组\" class=\"headerlink\" title=\"209.长度最小的子数组\"></a>209.长度最小的子数组</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><ol start=\"209\">\n<li>长度最小的子数组</li>\n</ol>\n<p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code> <strong>。</strong></p>\n<p>找出该数组中满足其和 <code>≥ target</code> 的长度最小的 <strong>连续子数组</strong> <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> ，并返回其长度<strong>。</strong>如果不存在符合条件的子数组，返回 <code>0</code> 。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：target &#x3D; 7, nums &#x3D; [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：target &#x3D; 4, nums &#x3D; [1,4,4]\n输出：1</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：target &#x3D; 11, nums &#x3D; [1,1,1,1,1,1,1,1]\n输出：0</code></pre>\n\n\n\n<p>提示：</p>\n<ul>\n<li><code>1 &lt;= target &lt;= 109</code></li>\n<li><code>1 &lt;= nums.length &lt;= 105</code></li>\n<li><code>1 &lt;= nums[i] &lt;= 105</code></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/minimum-size-subarray-sum/\">https://leetcode.cn/problems/minimum-size-subarray-sum/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int minSubArrayLen(int target, int[] nums) &#123;\n        &#x2F;&#x2F;滑动窗口\n        &#x2F;*\n        基本思想：\n            1.定义两个指针，初始值均为数组左边界\n            2.定义变量记录两个指针区域之间子序列的和，再定义一个变量记录当前满足条件的最小子序列长度，初始值为无穷大\n            3.不断右移右指针，并计算子区域元素之和，当子区域和满足条件时记录当前子区域长度并更新最小子区域长度，随后将左指针右移，若依旧满足条件则继续更新最小子区域长度，直到子区域之和不满足条件，之后重新开始右移右指针\n        *&#x2F;\n        &#x2F;&#x2F;判断参数是否合法\n        if(nums&#x3D;&#x3D;null||nums.length&#x3D;&#x3D;0)&#123;\n            return 0;\n        &#125;\n        &#x2F;&#x2F;初始化指针，j为右指针，i为左指针\n        int i&#x3D;0;\n        int j&#x3D;0;\n        &#x2F;&#x2F;sum表示i~j子序列之和\n        int sum&#x3D;0;\n        &#x2F;&#x2F;ret记录当前的最小子序列\n        int ret&#x3D;Integer.MAX_VALUE;\n        &#x2F;&#x2F;当遍历子序列之和没有超过target，则将j右移\n        while(j&lt;nums.length)&#123;\n            sum+&#x3D;nums[j];\n            &#x2F;&#x2F;若子序列之和满足条件，则计算子序列长度，并判断是否更新ret，并将左边界右移，更新子序列之和，循环右移并更新子序列长度。\n            while(sum&gt;&#x3D;target)&#123;\n                int sub_length&#x3D;j-i+1;\n                ret&#x3D;ret&gt;sub_length? sub_length:ret;\n                sum-&#x3D;nums[i++]; \n            &#125;\n            j++;\n        &#125;\n        &#x2F;&#x2F;若ret的值发生改变，则返回，否则返回0，表示没有满足条件的解\n        return ret&#x3D;&#x3D;Integer.MAX_VALUE? 0:ret;\n    &#125;\n&#125;</code></pre>\n\n","text":"209.长度最小的子数组题目描述： 长度最小的子数组 给定一个含有 n 个正整数的数组和一个正整数 target 。 找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":88,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":91,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":87,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">209.长度最小的子数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"59.螺旋矩阵Ⅱ","uid":"fb852bf52649b6773513d798310ccbeb","slug":"59-螺旋矩阵Ⅱ","date":"2022-08-19T12:59:09.000Z","updated":"2022-08-19T13:01:10.824Z","comments":true,"path":"api/articles/59-螺旋矩阵Ⅱ.json","keywords":null,"cover":null,"text":"59.螺旋矩阵Ⅱ题目描述： 螺旋矩阵 II 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。 example 1: 输入：n &#x3D; 3 输出：[[1,2,3],[8,9,4],[7,6,5]...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":88,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":91,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":87,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"ERROR 2003 (HY000) Can't connect to MySQL server on 'localhost:3306' (10061)","uid":"34cb425e734202379d2ace9dc721620a","slug":"连接mysql失败","date":"2022-08-18T04:11:34.000Z","updated":"2022-08-18T04:18:27.251Z","comments":true,"path":"api/articles/连接mysql失败.json","keywords":null,"cover":null,"text":"ERROR 2003 (HY000): Can’t connect to MySQL server on ‘localhost:3306’ (10061)问题描述：mysql -uroot -p 输入上传命令之后，出现标题上的错误。 数据库无法成功连接 解决方案： 打开win搜索...","link":"","photos":[],"count_time":{"symbolsCount":175,"symbolsTime":"1 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":1,"path":"api/categories/后端开发.json"}],"tags":[{"name":"报错","slug":"报错","count":3,"path":"api/tags/报错.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}