{"title":"135.分发糖果","uid":"1aae7d13b3ffa5a2f6f89a93b626eafb","slug":"135-分发糖果","date":"2022-12-17T11:18:01.000Z","updated":"2022-12-17T11:22:35.116Z","comments":true,"path":"api/articles/135-分发糖果.json","keywords":null,"cover":null,"content":"<h1 id=\"135-分发糖果\"><a href=\"#135-分发糖果\" class=\"headerlink\" title=\"135.分发糖果\"></a>135.分发糖果</h1><h2 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h2><ol start=\"135\">\n<li>分发糖果</li>\n</ol>\n<p><code>n</code> 个孩子站成一排。给你一个整数数组 <code>ratings</code> 表示每个孩子的评分。</p>\n<p>你需要按照以下要求，给这些孩子分发糖果：</p>\n<ul>\n<li>每个孩子至少分配到 <code>1</code> 个糖果。</li>\n<li>相邻两个孩子评分更高的孩子会获得更多的糖果。</li>\n</ul>\n<p>请你给每个孩子分发糖果，计算并返回需要准备的 <strong>最少糖果数目</strong> 。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：ratings &#x3D; [1,0,2]\n输出：5\n解释：你可以分别给第一个、第二个、第三个孩子分发 2、1、2 颗糖果。</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：ratings &#x3D; [1,2,2]\n输出：4\n解释：你可以分别给第一个、第二个、第三个孩子分发 1、2、1 颗糖果。\n     第三个孩子只得到 1 颗糖果，这满足题面中的两个条件。</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>n == ratings.length</code></li>\n<li><code>1 &lt;= n &lt;= 2 * 104</code></li>\n<li><code>0 &lt;= ratings[i] &lt;= 2 * 104</code></li>\n</ul>\n<p>题目来源：<a href=\"https://leetcode.cn/problems/candy/description/\">https://leetcode.cn/problems/candy/description/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int candy(int[] ratings) &#123;\n        int[] candyArray&#x3D;new int[ratings.length];\n        &#x2F;&#x2F;计算所需的糖果总数\n        int result&#x3D;0;\n        &#x2F;&#x2F;对糖果数组进行初始化\n        for(int k&#x3D;0;k&lt;ratings.length;k++)&#123;\n            candyArray[k]&#x3D;1;\n        &#125;\n        \n        &#x2F;&#x2F;首先从左向右遍历，如果后一个元素大于当前元素，则后一个元素的糖果数量为当前糖果数量+1\n        for(int i&#x3D;1;i&lt;ratings.length;i++)&#123;\n            if(ratings[i]&gt;ratings[i-1])&#123;\n                candyArray[i]&#x3D;candyArray[i-1]+1;\n            &#125;\n        &#125;\n        &#x2F;&#x2F;从后向前遍历，如果前一个元素大于后一个元素，则分为两种处理情况，如果前一个元素拥有的糖果数已经大于当前位置的糖果数量，则前一个元素保持原样，否则更新为当前位置糖果数量+1\n        for(int j&#x3D;ratings.length-2;j&gt;&#x3D;0;j--)&#123;\n            if(ratings[j]&gt;ratings[j+1])&#123;\n                candyArray[j]&#x3D;Math.max(candyArray[j],candyArray[j+1]+1);\n            &#125;\n        &#125;\n        for(int n&#x3D;0;n&lt;candyArray.length;n++)&#123;\n            result+&#x3D;candyArray[n];\n        &#125;\n        return result;\n\n    &#125;\n&#125;</code></pre>\n\n\n\n","text":"135.分发糖果问题描述： 分发糖果 n 个孩子站成一排。给你一个整数数组 ratings 表示每个孩子的评分。 你需要按照以下要求，给这些孩子分发糖果： 每个孩子至少分配到 1 个糖果。 相邻两个孩子评分更高的孩子会获得更多的糖果。 请你给每个孩子分发糖果，计算并返回需要准备的...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结果与算法","slug":"数据结果与算法","count":1,"path":"api/categories/数据结果与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":115,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":109,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#135-%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C\"><span class=\"toc-text\">135.分发糖果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">问题描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"860.柠檬水找零","uid":"f4bc994415987b6fe405c0f307a1279e","slug":"860-柠檬水找零","date":"2022-12-18T12:40:17.000Z","updated":"2022-12-18T12:44:14.170Z","comments":true,"path":"api/articles/860-柠檬水找零.json","keywords":null,"cover":null,"text":"860.柠檬水找零题目描述： 柠檬水找零 在柠檬水摊上，每一杯柠檬水的售价为 5 美元。顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。 每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":109,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":115,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":109,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"134.加油站","uid":"d6d0de907a6cde5432aeecaa7255f84f","slug":"134-加油站","date":"2022-12-16T14:02:43.000Z","updated":"2022-12-16T14:05:41.723Z","comments":true,"path":"api/articles/134-加油站.json","keywords":null,"cover":null,"text":"134.加油站题目描述： 加油站 在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。 你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。 给定两个整数数组 ...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":109,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":115,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":109,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}