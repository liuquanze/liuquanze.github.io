{"title":"Kth Largest Element in an Array——堆排序","uid":"b11e16d08ad1418b22f0f4722489b2fa","slug":"FindKthLargest01","date":"2022-07-21T00:45:06.000Z","updated":"2022-07-21T00:56:37.025Z","comments":true,"path":"api/articles/FindKthLargest01.json","keywords":null,"cover":null,"content":"<h1 id=\"Kth-Largest-Element-in-an-Array——堆排序\"><a href=\"#Kth-Largest-Element-in-an-Array——堆排序\" class=\"headerlink\" title=\"Kth Largest Element in an Array——堆排序\"></a>Kth Largest Element in an Array——堆排序</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>Given an integer array nums and an integer k, return the kth largest element in the array.</p>\n<p>Note that it is the kth largest element in the sorted order, not the kth distinct element.</p>\n<p>You must solve it in O(n) time complexity.</p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int findKthLargest(int[] nums, int k) &#123;\n        &#x2F;&#x2F;堆的大小\n        int heapSize&#x3D;nums.length;\n        &#x2F;&#x2F;初始建立大根堆\n        buildMaxHeap(nums,heapSize);\n        &#x2F;&#x2F;取出堆顶元素，置换到堆底，再对置换完成的堆进行调整\n        for(int i&#x3D;nums.length-1;i&gt;&#x3D;nums.length-k+1;i--)&#123;\n            swap(nums,0,i);\n            adjustHeap(nums,0,--heapSize);\n        &#125;\n        &#x2F;&#x2F;返回第k次调整的堆顶元素\n        return nums[0];\n    &#125;\n    &#x2F;&#x2F;初始建堆\n    public void buildMaxHeap(int[] nums,int heapSize)&#123;\n        &#x2F;&#x2F;找到第一个非叶节点，不断下坠\n        for(int i&#x3D;heapSize&#x2F;2;i&gt;&#x3D;0;i--)&#123;\n            adjustHeap(nums,i,heapSize);\n        &#125;\n    &#125;\n\t&#x2F;&#x2F;堆调整\n    public void adjustHeap(int[] nums,int i,int heapSize)&#123;\n        &#x2F;&#x2F;创建指针分别指向i节点的左右孩子节点\n        int left&#x3D;i*2+1;\n        int right&#x3D;i*2+2;\n        int largest&#x3D;i;\n        &#x2F;&#x2F;通过两次判断，将largest指针指向最大节点\n        if(left&lt;heapSize&amp;&amp;nums[left]&gt;nums[largest])&#123;\n            largest&#x3D;left;\n        &#125;\n        if(right&lt;heapSize&amp;&amp;nums[right]&gt;nums[largest])&#123;\n            largest&#x3D;right;\n        &#125;\n        &#x2F;&#x2F;若不符合大根堆要求，则进行调整\n        if(largest!&#x3D;i)&#123;\n            swap(nums,largest,i);\n            adjustHeap(nums,largest,heapSize);\n        &#125;\n    &#125;\n\n    public void swap(int[] nums,int left,int right)&#123;\n        int temp&#x3D;nums[left];\n        nums[left]&#x3D;nums[right];\n        nums[right]&#x3D;temp;\n    &#125;\n\n&#125;</code></pre>\n\n\n\n","text":"Kth Largest Element in an Array——堆排序题目描述：Given an integer array nums and an integer k, return the kth largest element in the array. Note tha...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":5,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Kth-Largest-Element-in-an-Array%E2%80%94%E2%80%94%E5%A0%86%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">Kth Largest Element in an Array——堆排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Top K Frequent Elements","uid":"457fe231ac1330559343c50bbf83f171","slug":"TopKFrequentElements","date":"2022-07-21T01:11:44.000Z","updated":"2022-07-21T01:15:31.750Z","comments":true,"path":"api/articles/TopKFrequentElements.json","keywords":null,"cover":null,"text":"Top K Frequent Elements题目描述：Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":5,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"找到第k大的元素——快速排序","uid":"124012fd83870b9daa284761d75f9454","slug":"FindKthLargest","date":"2022-07-21T00:24:42.000Z","updated":"2022-07-21T00:56:06.830Z","comments":true,"path":"api/articles/FindKthLargest.json","keywords":null,"cover":null,"text":"Kth Largest Element in an Array——快速排序题目描述：Given an integer array nums and an integer k, return the kth largest element in the array. Note th...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":5,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}