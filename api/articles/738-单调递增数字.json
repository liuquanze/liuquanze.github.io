{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"738-单调递增数字","date":"2022-12-24T13:33:47.363Z","updated":"2022-12-24T13:36:31.314Z","comments":true,"path":"api/articles/738-单调递增数字.json","keywords":null,"cover":null,"content":"<hr>\n<p>title: 738.单调递增数字<br>date: 2022-12-24 21:33:47<br>categories:</p>\n<ul>\n<li>数据结构与算法<br>tags:</li>\n<li>Java</li>\n<li>leetcode</li>\n<li>贪心算法</li>\n</ul>\n<hr>\n<h1 id=\"738-单调递增数字\"><a href=\"#738-单调递增数字\" class=\"headerlink\" title=\"738.单调递增数字\"></a>738.单调递增数字</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><ol start=\"738\">\n<li>单调递增的数字</li>\n</ol>\n<p>当且仅当每个相邻位数上的数字 <code>x</code> 和 <code>y</code> 满足 <code>x &lt;= y</code> 时，我们称这个整数是<strong>单调递增</strong>的。</p>\n<p>给定一个整数 <code>n</code> ，返回 <em>小于或等于 <code>n</code> 的最大数字，且数字呈 <strong>单调递增</strong></em> 。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: n &#x3D; 10\n输出: 9</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: n &#x3D; 1234\n输出: 1234</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: n &#x3D; 332\n输出: 299</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>0 &lt;= n &lt;= 109</code></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/monotone-increasing-digits/description/\">https://leetcode.cn/problems/monotone-increasing-digits/description/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    &#x2F;&#x2F;贪心算法，如果出现前一位大于后一位的情况，即出现非递增的情况，则前一位减一，后一位变成9，即可获得小于n的最大的递增数字\n    public int monotoneIncreasingDigits(int n) &#123;\n        String s&#x3D;String.valueOf(n);\n        &#x2F;&#x2F;转化为字符串，并转化为字符数组\n        char[] chars&#x3D;s.toCharArray();\n        &#x2F;&#x2F;标记第一个9的位置，方便后面对9进行统一赋值\n        int start&#x3D;s.length();\n        &#x2F;&#x2F;遍历每一位数字，当出现前一位大于后一位的情况时，更新9的位置，并将前一位数字减一\n        for(int i&#x3D;s.length()-2;i&gt;&#x3D;0;i--)&#123;\n            if(chars[i]&gt;chars[i+1])&#123;\n                start&#x3D;i+1;\n                chars[i]--;\n            &#125;\n        &#125;\n        &#x2F;&#x2F;对9进行统一赋值\n        for(int i&#x3D;start;i&lt;s.length();i++)&#123;\n            chars[i]&#x3D;&#39;9&#39;;\n        &#125;\n        &#x2F;&#x2F;字符数组转换为整数并输出\n        return Integer.parseInt(String.valueOf(chars));\n    &#125;\n&#125;</code></pre>\n\n\n\n","text":" title: 738.单调递增数字date: 2022-12-24 21:33:47categories: 数据结构与算法tags: Java leetcode 贪心算法 738.单调递增数字题目描述： 单调递增的数字 当且仅当每个相邻位数上的数字 x 和 y 满足 x &lt...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#738-%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E6%95%B0%E5%AD%97\"><span class=\"toc-text\">738.单调递增数字</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"714.买卖股票的最佳时机含手续费","uid":"4d703d6dd28c31c1b1d5c0868f9f4887","slug":"714-买卖股票的最佳时机含手续费","date":"2022-12-25T13:42:08.000Z","updated":"2022-12-25T13:44:28.059Z","comments":true,"path":"api/articles/714-买卖股票的最佳时机含手续费.json","keywords":null,"cover":null,"text":"714.买卖股票的最佳时机含手续费问题描述： 买卖股票的最佳时机含手续费 给定一个整数数组 prices，其中 prices[i]表示第 i 天的股票价格 ；整数 fee 代表了交易股票的手续费用。 你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":110,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":116,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":110,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"56.合并区间","uid":"708bb9dc20508eae07ec4c15173c31e9","slug":"56-合并区间","date":"2022-12-23T14:03:17.000Z","updated":"2022-12-23T14:09:32.282Z","comments":true,"path":"api/articles/56-合并区间.json","keywords":null,"cover":null,"text":"56.合并区间题目描述：以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。 example 1: 输入：inte...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":110,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":116,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":110,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}