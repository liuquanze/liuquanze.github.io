{"title":"列表导出为数组","uid":"3961e8d57cd72a6f65bba4c20e028616","slug":"ListtoArray","date":"2022-07-28T03:18:32.000Z","updated":"2022-07-28T03:27:01.168Z","comments":true,"path":"api/articles/ListtoArray.json","keywords":null,"cover":null,"content":"<h1 id=\"Java中List集合的toArray方法\"><a href=\"#Java中List集合的toArray方法\" class=\"headerlink\" title=\"Java中List集合的toArray方法\"></a>Java中List集合的toArray方法</h1><h2 id=\"1-toArray\"><a href=\"#1-toArray\" class=\"headerlink\" title=\"1. toArray()\"></a>1. toArray()</h2><ul>\n<li>当没有参数指定时，返回的数组中元素的类型是Object类型的。因为List在使用时一般会指定泛型，所以该方法是不常用的。</li>\n</ul>\n<h2 id=\"2-toArray-T-a\"><a href=\"#2-toArray-T-a\" class=\"headerlink\" title=\"2.toArray(T[] a)\"></a>2.toArray(T[] a)</h2><ul>\n<li>leetcode-406使用到了该方法将列表对象转化为二维数组</li>\n<li>可以导出数组为指定的类型</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">List&lt;String&gt; list&#x3D;new List&lt;&gt;();\nlist.add(&quot;hello&quot;);\nlist.add(&quot;world&quot;);\nString[] strs&#x3D;list.toArray(new String[list.size()]);</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">List&lt;int[]&gt; list&#x3D;new List&lt;&gt;();\nlist.add(new int[]&#123;0,1&#125;);\nlist.add(new int[]&#123;1,0&#125;);\nint[][] ret&#x3D;list.toArray(new int[list.size()][]);</code></pre>\n\n\n\n","text":"Java中List集合的toArray方法1. toArray() 当没有参数指定时，返回的数组中元素的类型是Object类型的。因为List在使用时一般会指定泛型，所以该方法是不常用的。 2.toArray(T[] a) leetcode-406使用到了该方法将列表对象转化为二...","link":"","photos":[],"count_time":{"symbolsCount":503,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":24,"path":"api/tags/Java.json"},{"name":"数据结构","slug":"数据结构","count":2,"path":"api/tags/数据结构.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E4%B8%ADList%E9%9B%86%E5%90%88%E7%9A%84toArray%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">Java中List集合的toArray方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-toArray\"><span class=\"toc-text\">1. toArray()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-toArray-T-a\"><span class=\"toc-text\">2.toArray(T[] a)</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"买股票的最佳时机","uid":"5d7c6d0b72a0ac167a5663e12c3dcdf4","slug":"买股票的最佳时机","date":"2022-07-29T01:41:19.000Z","updated":"2022-07-29T01:45:17.659Z","comments":true,"path":"api/articles/买股票的最佳时机.json","keywords":null,"cover":null,"text":"121. 买股票的最佳时机题目描述：给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。 你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。 返回你可以从这笔...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":22,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":24,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":21,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"根据身高重建队列","uid":"17c36b5674ca98b6f74033f762d79de8","slug":"根据身高重建队列","date":"2022-07-28T03:13:52.000Z","updated":"2022-07-28T03:16:54.318Z","comments":true,"path":"api/articles/根据身高重建队列.json","keywords":null,"cover":null,"text":"406.根据身高重建队列题目描述：假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] &#x3D; [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人。 请你...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":22,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":24,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":21,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}