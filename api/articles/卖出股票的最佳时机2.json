{"title":"买卖股票的最佳时机2","uid":"6b879bd90cb55e176f69ea7d49b28d19","slug":"卖出股票的最佳时机2","date":"2022-07-29T02:18:33.000Z","updated":"2022-07-29T02:20:44.442Z","comments":true,"path":"api/articles/卖出股票的最佳时机2.json","keywords":null,"cover":null,"content":"<h1 id=\"122-买卖股票的最佳时机2\"><a href=\"#122-买卖股票的最佳时机2\" class=\"headerlink\" title=\"122. 买卖股票的最佳时机2\"></a>122. 买卖股票的最佳时机2</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>给你一个整数数组 prices ，其中 prices[i] 表示某支股票第 i 天的价格。</p>\n<p>在每一天，你可以决定是否购买和&#x2F;或出售股票。你在任何时候 最多 只能持有 一股 股票。你也可以先购买，然后在 同一天 出售。</p>\n<p>返回 你能获得的 最大 利润 。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：prices &#x3D; [7,1,5,3,6,4]\n输出：7\n解释：在第 2 天（股票价格 &#x3D; 1）的时候买入，在第 3 天（股票价格 &#x3D; 5）的时候卖出, 这笔交易所能获得利润 &#x3D; 5 - 1 &#x3D; 4 。\n     随后，在第 4 天（股票价格 &#x3D; 3）的时候买入，在第 5 天（股票价格 &#x3D; 6）的时候卖出, 这笔交易所能获得利润 &#x3D; 6 - 3 &#x3D; 3 。\n     总利润为 4 + 3 &#x3D; 7 。</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：prices &#x3D; [1,2,3,4,5]\n输出：4\n解释：在第 1 天（股票价格 &#x3D; 1）的时候买入，在第 5 天 （股票价格 &#x3D; 5）的时候卖出, 这笔交易所能获得利润 &#x3D; 5 - 1 &#x3D; 4 。\n     总利润为 4 。</code></pre>\n\n\n\n<p>题目来源：<a href=\"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/\">https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxProfit(int[] prices) &#123;\n        &#x2F;&#x2F;贪心，只要股票能涨，就卖，只要能赚到钱，就卖\n        int max_profit&#x3D;0;\n        &#x2F;&#x2F;从第二天开始遍历，只要比前一天价格高，就卖掉\n        for(int i&#x3D;1;i&lt;prices.length;i++)&#123;\n            if(prices[i]&gt;prices[i-1])&#123;\n                max_profit+&#x3D;prices[i]-prices[i-1];\n            &#125;\n        &#125;\n        return max_profit;\n    &#125;\n&#125;</code></pre>\n\n","text":"122. 买卖股票的最佳时机2题目描述：给你一个整数数组 prices ，其中 prices[i] 表示某支股票第 i 天的价格。 在每一天，你可以决定是否购买和&#x2F;或出售股票。你在任何时候 最多 只能持有 一股 股票。你也可以先购买，然后在 同一天 出售。 返回 你能获...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":24,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":26,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":23,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#122-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA2\"><span class=\"toc-text\">122. 买卖股票的最佳时机2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"种花问题","uid":"17a5d31322fb6873ed3794c44302ea45","slug":"种花问题","date":"2022-07-30T01:41:20.000Z","updated":"2022-07-30T01:44:14.639Z","comments":true,"path":"api/articles/种花问题.json","keywords":null,"cover":null,"text":"605.种花问题题目描述：假设有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花不能种植在相邻的地块上，它们会争夺水源，两者都会死去。 给你一个整数数组 flowerbed 表示花坛，由若干 0 和 1 组成，其中 0 表示没种植花，1 表示种植了花。另有一个数 n ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":24,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":26,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":23,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"买股票的最佳时机","uid":"5d7c6d0b72a0ac167a5663e12c3dcdf4","slug":"买股票的最佳时机","date":"2022-07-29T01:41:19.000Z","updated":"2022-07-29T01:45:17.659Z","comments":true,"path":"api/articles/买股票的最佳时机.json","keywords":null,"cover":null,"text":"121. 买股票的最佳时机题目描述：给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。 你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。 返回你可以从这笔...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":24,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":26,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":23,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}