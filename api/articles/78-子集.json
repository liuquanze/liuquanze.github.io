{"title":"78.子集","uid":"73e62cf89f554b3cf0c0c9da24853098","slug":"78-子集","date":"2022-11-07T13:36:20.000Z","updated":"2022-11-07T13:41:29.109Z","comments":true,"path":"api/articles/78-子集.json","keywords":null,"cover":null,"content":"<h1 id=\"78-子集\"><a href=\"#78-子集\" class=\"headerlink\" title=\"78.子集\"></a>78.子集</h1><h2 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h2><p>给你一个整数数组 <code>nums</code> ，数组中的元素 <strong>互不相同</strong> 。返回该数组所有可能的子集（幂集）。</p>\n<p>解集 <strong>不能</strong> 包含重复的子集。你可以按 <strong>任意顺序</strong> 返回解集。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：nums &#x3D; [1,2,3]\n输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：nums &#x3D; [0]\n输出：[[],[0]]</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n<li><code>nums</code> 中的所有元素 <strong>互不相同</strong></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/subsets/\">https://leetcode.cn/problems/subsets/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    List&lt;List&lt;Integer&gt;&gt; result&#x3D;new ArrayList&lt;&gt;();\n    LinkedList&lt;Integer&gt; path&#x3D;new LinkedList&lt;&gt;();\n    public List&lt;List&lt;Integer&gt;&gt; subsets(int[] nums) &#123;\n        getSubSet(nums,0);\n        return result;\n    &#125;\n    public void getSubSet(int[] nums,int startIndex)&#123;\n        &#x2F;&#x2F;记录所有子集，包括空集\n        result.add(new LinkedList&lt;&gt;(path));\n        for(int i&#x3D;startIndex;i&lt;nums.length;i++)&#123;\n            path.add(nums[i]);\n            getSubSet(nums,i+1);\n            path.removeLast();\n        &#125;\n\n    &#125;\n&#125;</code></pre>\n\n","text":"78.子集问题描述：给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。 解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。 example 1: 输入：nums &#x3D; [1,2,3] 输出：[[],[1],[2],[1,2]...","link":"","photos":[],"count_time":{"symbolsCount":961,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":99,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":104,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":98,"path":"api/tags/leetcode.json"},{"name":"回溯算法","slug":"回溯算法","count":9,"path":"api/tags/回溯算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#78-%E5%AD%90%E9%9B%86\"><span class=\"toc-text\">78.子集</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">问题描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"90.子集Ⅱ","uid":"5318d9a835b8dca882f536085827709f","slug":"90-子集Ⅱ","date":"2022-11-09T03:50:16.000Z","updated":"2022-11-09T03:52:54.427Z","comments":true,"path":"api/articles/90-子集Ⅱ.json","keywords":null,"cover":null,"text":"90.子集Ⅱ题目描述：90.子集 II 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。 解集 不能 包含重复的子集。返回的解集中，子集可以按 任意顺序 排列。 example 1： 输入：nums &#x3D; [1,2,2] 输出：[...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":99,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":104,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":98,"path":"api/tags/leetcode.json"},{"name":"回溯算法","slug":"回溯算法","count":9,"path":"api/tags/回溯算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"93.复原IP地址","uid":"2aa2b4cd6cd10ccd2f6292d5d41a250c","slug":"93-复原IP地址","date":"2022-11-05T13:47:14.000Z","updated":"2022-11-05T13:49:44.476Z","comments":true,"path":"api/articles/93-复原IP地址.json","keywords":null,"cover":null,"text":"93.复原IP地址问题描述： 复原 IP 地址 有效 IP 地址 正好由四个整数（每个整数位于 0 到 255 之间组成，且不能含有前导 0），整数之间用 &#39;.&#39; 分隔。 例如：&quot;0.1.2.201&quot; 和 &quot;192.168.1.1&q...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":99,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":104,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":98,"path":"api/tags/leetcode.json"},{"name":"回溯算法","slug":"回溯算法","count":9,"path":"api/tags/回溯算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}