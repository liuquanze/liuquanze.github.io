{"title":"98.验证二叉搜索树","uid":"dd5945836ee2298d3cd22289ae215e69","slug":"98-验证二叉搜索树","date":"2022-10-07T00:54:24.000Z","updated":"2022-10-07T00:56:16.337Z","comments":true,"path":"api/articles/98-验证二叉搜索树.json","keywords":null,"cover":null,"content":"<h1 id=\"98-验证二叉搜索树\"><a href=\"#98-验证二叉搜索树\" class=\"headerlink\" title=\"98.验证二叉搜索树\"></a>98.验证二叉搜索树</h1><h2 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h2><ol start=\"98\">\n<li>验证二叉搜索树</li>\n</ol>\n<p>给你一个二叉树的根节点 <code>root</code> ，判断其是否是一个有效的二叉搜索树。</p>\n<p><strong>有效</strong> 二叉搜索树定义如下：</p>\n<ul>\n<li>节点的左子树只包含 <strong>小于</strong> 当前节点的数。</li>\n<li>节点的右子树只包含 <strong>大于</strong> 当前节点的数。</li>\n<li>所有左子树和右子树自身必须也是二叉搜索树。</li>\n</ul>\n<p>example 1：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：root &#x3D; [2,1,3]\n输出：true</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：root &#x3D; [5,1,4,null,null,3,6]\n输出：false\n解释：根节点的值是 5 ，但是右子节点的值是 4 。</code></pre>\n\n<p>提示：</p>\n<ul>\n<li>树中节点数目范围在<code>[1, 104]</code> 内</li>\n<li><code>-231 &lt;= Node.val &lt;= 231 - 1</code></li>\n</ul>\n<p>题目来源：<a href=\"https://leetcode.cn/problems/validate-binary-search-tree/\">https://leetcode.cn/problems/validate-binary-search-tree/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * Definition for a binary tree node.\n * public class TreeNode &#123;\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() &#123;&#125;\n *     TreeNode(int val) &#123; this.val &#x3D; val; &#125;\n *     TreeNode(int val, TreeNode left, TreeNode right) &#123;\n *         this.val &#x3D; val;\n *         this.left &#x3D; left;\n *         this.right &#x3D; right;\n *     &#125;\n * &#125;\n *&#x2F;\nclass Solution &#123;\n    &#x2F;&#x2F;进行中序遍历，并将遍历的节点值存入到list集合中\n    public void valid(TreeNode node,List&lt;Integer&gt; list)&#123;\n        if(node&#x3D;&#x3D;null)\n            return ;\n        valid(node.left,list);\n        list.add(node.val);\n        valid(node.right,list);\n    &#125;\n\n    \n    public boolean isValidBST(TreeNode root) &#123;\n\n        List&lt;Integer&gt; list&#x3D;new ArrayList&lt;&gt;();\n        valid(root,list);\n        &#x2F;&#x2F;将集合转化为数组\n        Integer[] arr&#x3D;list.toArray(new Integer[list.size()]);\n        &#x2F;&#x2F;判断数组是否为升序，如果不是升序，则不是二叉搜索树，否则是二叉搜索树\n        for(int i&#x3D;1;i&lt;arr.length;i++)&#123;\n            if(arr[i]&lt;&#x3D;arr[i-1])\n                return false;\n        &#125;\n        return true;\n    &#125;\n&#125;</code></pre>\n\n","text":"98.验证二叉搜索树问题描述： 验证二叉搜索树 给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。 有效 二叉搜索树定义如下： 节点的左子树只包含 小于 当前节点的数。 节点的右子树只包含 大于 当前节点的数。 所有左子树和右子树自身必须也是二叉搜索树。 ex...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":94,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":97,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":93,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":26,"path":"api/tags/二叉树.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#98-%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\"><span class=\"toc-text\">98.验证二叉搜索树</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">问题描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"530.二叉搜索树的最小绝对值差","uid":"6226c398b825b38b91ad0079c34b0472","slug":"530-二叉搜索树的最小绝对值差","date":"2022-10-08T01:03:59.000Z","updated":"2022-10-08T01:06:27.840Z","comments":true,"path":"api/articles/530-二叉搜索树的最小绝对值差.json","keywords":null,"cover":null,"text":"530.二叉搜索树的最小绝对值差题目描述： 二叉搜索树的最小绝对差 给你一个二叉搜索树的根节点 root ，返回 树中任意两不同节点值之间的最小差值 。 差值是一个正数，其数值等于两值之差的绝对值。 example 1： 输入：root &#x3D; [4,2,6,1,3] 输出...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":94,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":97,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":93,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":26,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"700.二叉搜索树中的搜索","uid":"4e6e4747e1b3af852c2bcbf832cc15bd","slug":"700-二叉搜索树中的搜索","date":"2022-10-06T01:18:40.000Z","updated":"2022-10-06T01:20:43.541Z","comments":true,"path":"api/articles/700-二叉搜索树中的搜索.json","keywords":null,"cover":null,"text":"700.二叉搜索树中的搜索题目描述： 二叉搜索树中的搜索 给定二叉搜索树（BST）的根节点 root 和一个整数值 val。 你需要在 BST 中找到节点值等于 val 的节点。 返回以该节点为根的子树。 如果节点不存在，则返回 null 。 example 1： 输入：root...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":94,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":97,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":93,"path":"api/tags/leetcode.json"},{"name":"二叉树","slug":"二叉树","count":26,"path":"api/tags/二叉树.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}