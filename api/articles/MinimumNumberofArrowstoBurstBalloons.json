{"title":"452.Minimum Number of Arrows to Burst Balloons","uid":"8c8ee24da1a163a01cda5376a75169b1","slug":"MinimumNumberofArrowstoBurstBalloons","date":"2022-07-27T02:11:15.000Z","updated":"2022-07-27T02:15:51.625Z","comments":true,"path":"api/articles/MinimumNumberofArrowstoBurstBalloons.json","keywords":null,"cover":null,"content":"<h1 id=\"452-Minimum-Number-of-Arrows-to-Burst-Balloons\"><a href=\"#452-Minimum-Number-of-Arrows-to-Burst-Balloons\" class=\"headerlink\" title=\"452.Minimum Number of Arrows to Burst Balloons\"></a>452.Minimum Number of Arrows to Burst Balloons</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array points where points[i] &#x3D; [xstart, xend] denotes a balloon whose horizontal diameter stretches between xstart and xend. You do not know the exact y-coordinates of the balloons.</p>\n<p>Arrows can be shot up directly vertically (in the positive y-direction) from different points along the x-axis. A balloon with xstart and xend is burst by an arrow shot at x if xstart &lt;&#x3D; x &lt;&#x3D; xend. There is no limit to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.</p>\n<p>Given the array points, return the minimum number of arrows that must be shot to burst all balloons.</p>\n<p>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 points ，其中points[i] &#x3D; [xstart, xend] 表示水平直径在 xstart 和 xend之间的气球。你不知道气球的确切 y 坐标。</p>\n<p>一支弓箭可以沿着 x 轴从不同点 完全垂直 地射出。在坐标 x 处射出一支箭，若有一个气球的直径的开始和结束坐标为 xstart，xend， 且满足  xstart ≤ x ≤ xend，则该气球会被 引爆 。可以射出的弓箭的数量 没有限制 。 弓箭一旦被射出之后，可以无限地前进。</p>\n<p>给你一个数组 points ，返回引爆所有气球所必须射出的 最小 弓箭数 。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：points &#x3D; [[10,16],[2,8],[1,6],[7,12]]\n输出：2\n解释：气球可以用2支箭来爆破:\n-在x &#x3D; 6处射出箭，击破气球[2,8]和[1,6]。\n-在x &#x3D; 11处发射箭，击破气球[10,16]和[7,12]。</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：points &#x3D; [[1,2],[3,4],[5,6],[7,8]]\n输出：4\n解释：每个气球需要射出一支箭，总共需要4支箭。</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：points &#x3D; [[1,2],[2,3],[3,4],[4,5]]\n输出：2\n解释：气球可以用2支箭来爆破:\n- 在x &#x3D; 2处发射箭，击破气球[1,2]和[2,3]。\n- 在x &#x3D; 4处射出箭，击破气球[3,4]和[4,5]。</code></pre>\n\n<p>题目链接：<a href=\"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/\">https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;*排序+贪心*&#x2F;\nclass Solution &#123;\n    public int findMinArrowShots(int[][] points) &#123;\n        &#x2F;&#x2F;检查数组是否合法\n        if(points.length&#x3D;&#x3D;0)&#123;\n            return 0;\n        &#125;\n        &#x2F;&#x2F;依据右边界的大小进行升序排序\n        Arrays.sort(points,new Comparator&lt;&gt;()&#123;\n            public int compare(int[] m,int[] n)&#123;\n                &#x2F;&#x2F;m小n大则不用交换位置，因为我们要的就是升序排序\n                if(m[1]&lt;n[1])&#123;\n                    return -1;\n                    &#x2F;&#x2F;m大n小，则需要交换位置，保证升序\n                &#125;else if(m[1]&gt;n[1])&#123;\n                    return 1;\n                    &#x2F;&#x2F;若m&#x3D;n则不需要交换位置，【当返回值小于等于0时，不进行元素交换，仅当返回值大于0时才需要进行交换！】\n                &#125;else&#123;\n\n                    return 0;\n                &#125;\n            &#125;\n        &#125;);\n        &#x2F;&#x2F;获取第一个元素的右边界作为初始右边界\n        long right&#x3D;points[0][1];\n        &#x2F;&#x2F;用于箭矢计数，初始值为1\n        int num&#x3D;1;\n        &#x2F;&#x2F;对元素进行遍历，如果需要遇到了不重叠的气球（即左边界大于right），则需要增加箭矢的数量，并更新右边界的值\n        for(int[] b:points)&#123;\n            if(b[0]&gt;right)&#123;\n                num++;\n                right&#x3D;b[1];\n            &#125;\n        &#125;\n        &#x2F;&#x2F;返回箭矢的数量\n        return num;\n\n    &#125;\n&#125;</code></pre>\n\n","text":"452.Minimum Number of Arrows to Burst Balloons题目描述：There are some spherical balloons taped onto a flat wall that represents the XY-plane. Th...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":85,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":88,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":84,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#452-Minimum-Number-of-Arrows-to-Burst-Balloons\"><span class=\"toc-text\">452.Minimum Number of Arrows to Burst Balloons</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"根据身高重建队列","uid":"17c36b5674ca98b6f74033f762d79de8","slug":"根据身高重建队列","date":"2022-07-28T03:13:52.000Z","updated":"2022-07-28T03:16:54.318Z","comments":true,"path":"api/articles/根据身高重建队列.json","keywords":null,"cover":null,"text":"406.根据身高重建队列题目描述：假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] &#x3D; [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人。 请你...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":85,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":88,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":84,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"Non—overlapping Intervals","uid":"0b469cb01192ec369bac9950f85cb59d","slug":"NonoverlappingIntervals","date":"2022-07-25T07:05:31.000Z","updated":"2022-07-25T07:15:26.096Z","comments":true,"path":"api/articles/NonoverlappingIntervals.json","keywords":null,"cover":null,"text":"435. Non-overlapping Intervals题目描述：Given an array of intervals intervals where intervals[i] &#x3D; [starti, endi], return the minimum number...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":85,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":88,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":84,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}