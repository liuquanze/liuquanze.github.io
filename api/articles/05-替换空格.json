{"title":"05.替换空格","uid":"e719937f6951d143569f327df963f42d","slug":"05-替换空格","date":"2022-09-05T14:29:42.000Z","updated":"2022-09-05T14:35:56.634Z","comments":true,"path":"api/articles/05-替换空格.json","keywords":null,"cover":null,"content":"<h1 id=\"05-替换空格\"><a href=\"#05-替换空格\" class=\"headerlink\" title=\"05.替换空格\"></a>05.替换空格</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>剑指 Offer 05. 替换空格</p>\n<p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成”%20”。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：s &#x3D; &quot;We are happy.&quot;\n输出：&quot;We%20are%20happy.&quot;</code></pre>\n\n<p>提示：</p>\n<p>0 &lt;&#x3D; s 的长度 &lt;&#x3D; 10000</p>\n<p>题目来源：<a href=\"https://leetcode.cn/problems/ti-huan-kong-ge-lcof/\">https://leetcode.cn/problems/ti-huan-kong-ge-lcof/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;常规方法：从前向后遍历，遇到空格则替换为&quot;02%&quot;，可以使用StringBuilder实现，但是每次替换，后面的字符串需要向后移动\n&#x2F;&#x2F;使用一个新的对象，复制 str，复制的过程对其判断，是空格则替换，否则直接复制，类似于数组复制\npublic static String replaceSpace(StringBuffer str) &#123;\n        if (str &#x3D;&#x3D; null) &#123;\n            return null;\n        &#125;\n\t\t&#x2F;&#x2F;选用 StringBuilder 单线程使用，比较快，选不选都行\n        StringBuilder sb &#x3D; new StringBuilder();\n\t\t&#x2F;&#x2F;使用 sb 逐个复制 str ，碰到空格则替换，否则直接复制\n        for (int i &#x3D; 0; i &lt; str.length(); i++) &#123;\n\t\t&#x2F;&#x2F;str.charAt(i) 为 char 类型，为了比较需要将其转为和 &quot; &quot; 相同的字符串类型\n        &#x2F;&#x2F;if (&quot; &quot;.equals(String.valueOf(str.charAt(i))))&#123;\n            if (s.charAt(i) &#x3D;&#x3D; &#39; &#39;) &#123;\n                sb.append(&quot;%20&quot;);\n            &#125; else &#123;\n                sb.append(str.charAt(i));\n            &#125;\n        &#125;\n        return sb.toString();\n    &#125;\n&#x2F;&#x2F;从后向前遍历，使用双指针的方法进行实现，速度更快beat 100%\nclass Solution &#123;\n    public String replaceSpace(String s) &#123;\n        &#x2F;&#x2F;判断参数是否合法\n        if(s.length()&#x3D;&#x3D;0||s&#x3D;&#x3D;null)&#123;\n            return s;\n        &#125;\n        &#x2F;&#x2F;拼接字符串\n        StringBuilder tail&#x3D;new StringBuilder();\n        &#x2F;&#x2F;每遍历到一个空格，拼接字符串扩大两个空格大小\n        for(int i&#x3D;0;i&lt;s.length();i++)&#123;\n            if(s.charAt(i)&#x3D;&#x3D;&#39; &#39;)&#123;\n                tail.append(&quot;  &quot;);\n            &#125;\n        &#125;\n        &#x2F;&#x2F;若不存在空格，则直接返回\n        if(tail.length()&#x3D;&#x3D;0)&#123;\n            return s;\n        &#125;\n        &#x2F;&#x2F;记录左右指针\n        int left&#x3D;s.length()-1;\n        s+&#x3D;tail;\n        int right&#x3D;s.length()-1;\n        char[] chars&#x3D;s.toCharArray();\n        &#x2F;&#x2F;左指针i从后向前遍历\n        while(left&gt;&#x3D;0)&#123;\n            if(chars[left]&#x3D;&#x3D;&#39; &#39;)&#123;\n                chars[right--]&#x3D;&#39;0&#39;;\n                chars[right--]&#x3D;&#39;2&#39;;\n                chars[right]&#x3D;&#39;%&#39;;\n            &#125;else&#123;\n                chars[right]&#x3D;chars[left];\n            &#125;\n            left--;\n            right--;\n        &#125;\n        return new String(chars);\n    &#125;\n&#125;\n</code></pre>\n\n\n\n\n\n","text":"05.替换空格题目描述：剑指 Offer 05. 替换空格 请实现一个函数，把字符串 s 中的每个空格替换成”%20”。 example 1: 输入：s &#x3D; &quot;We are happy.&quot; 输出：&quot;We%20are%20happy.&quo...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":83,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":86,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":82,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#05-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC\"><span class=\"toc-text\">05.替换空格</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"151.反转字符串中的单词","uid":"bf3e3be4adc10fbd226da035ce8a9591","slug":"151-反转字符串中的单词","date":"2022-09-06T13:39:09.000Z","updated":"2022-09-06T13:42:34.894Z","comments":true,"path":"api/articles/151-反转字符串中的单词.json","keywords":null,"cover":null,"text":"151.反转字符串中的单词题目描述： 反转字符串中的单词 给你一个字符串 s ，请你反转字符串中 单词 的顺序。 单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。 返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。 注意：输入字符串...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":83,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":86,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":82,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"541.反转字符串Ⅱ","uid":"097e37183692c086b0f10d951c3da4e4","slug":"541-反转字符串Ⅱ","date":"2022-09-03T13:23:56.000Z","updated":"2022-09-03T13:25:57.390Z","comments":true,"path":"api/articles/541-反转字符串Ⅱ.json","keywords":null,"cover":null,"text":"541.反转字符串Ⅱ题目描述： 反转字符串 II 给定一个字符串 s 和一个整数 k，从字符串开头算起，每计数至 2k 个字符，就反转这 2k 字符中的前 k 个字符。 如果剩余字符少于 k 个，则将剩余字符全部反转。 如果剩余字符小于 2k 但大于或等于 k 个，则反转前 k ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":86,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":82,"path":"api/tags/leetcode.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}