{"title":"分发饼干","uid":"3251d0dcefb4f9336a7d11d448387586","slug":"Assign-Cookies","date":"2022-07-24T00:59:12.000Z","updated":"2022-11-30T03:08:45.775Z","comments":true,"path":"api/articles/Assign-Cookies.json","keywords":null,"cover":null,"content":"<h1 id=\"分发饼干\"><a href=\"#分发饼干\" class=\"headerlink\" title=\"分发饼干\"></a>分发饼干</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。</p>\n<p>对每个孩子 <code>i</code>，都有一个胃口值 <code>g[i]</code>，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 <code>j</code>，都有一个尺寸 <code>s[j]</code> 。如果 <code>s[j] &gt;= g[i]</code>，我们可以将这个饼干 <code>j</code> 分配给孩子 <code>i</code> ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。</p>\n<p>example1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: g &#x3D; [1,2,3], s &#x3D; [1,1]\n输出: 1\n解释: \n你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。\n虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。\n所以你应该输出1。</code></pre>\n\n<p>example2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: g &#x3D; [1,2], s &#x3D; [1,2,3]\n输出: 2\n解释: \n你有两个孩子和三块小饼干，2个孩子的胃口值分别是1,2。\n你拥有的饼干数量和尺寸都足以让所有孩子满足。\n所以你应该输出2.</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>1 &lt;= g.length &lt;= 3 * 104</code></li>\n<li><code>0 &lt;= s.length &lt;= 3 * 104</code></li>\n<li><code>1 &lt;= g[i], s[j] &lt;= 231 - 1</code></li>\n</ul>\n<p>题目来源：<a href=\"https://leetcode.cn/problems/assign-cookies\">https://leetcode.cn/problems/assign-cookies</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;方法1：饼干和胃口都从大到小进行匹配，当饼干不足以满足胃口时，就寻找下一个更小的胃口，即移动胃口数组指针\nclass Solution &#123;\n    public int findContentChildren(int[] g, int[] s) &#123;\n        Arrays.sort(s);\n        Arrays.sort(g);\n        int index_children&#x3D;g.length-1;\n        int index_supply&#x3D;s.length-1;\n        int count&#x3D;0;\n        while(index_children&gt;&#x3D;0&amp;&amp;index_supply&gt;&#x3D;0)&#123;\n            if(s[index_supply]&gt;&#x3D;g[index_children])&#123;\n                index_supply--;\n                count++;\n            &#125;\n            index_children--;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;方法二、饼干和胃口都从小到大进行匹配，当饼干不足以满足胃口时，移动饼干，即找下一个更大的饼干。\nclass Solution &#123;\n    public int findContentChildren(int[] g, int[] s) &#123;\n        Arrays.sort(s);\n        Arrays.sort(g);\n        int index_supply&#x3D;0;\n        int index_children&#x3D;0;\n        int count&#x3D;0;\n        while(index_children&lt;g.length&amp;&amp;index_supply&lt;s.length)&#123;\n            if(s[index_supply]&gt;&#x3D;g[index_children])&#123;\n                &#x2F;&#x2F;当前的child被满足，++\n                index_children++;\n                &#x2F;&#x2F;满足人数++\n                count++;\n\n            &#125;\n            &#x2F;&#x2F; 开始便利下一个饼干\n            index_supply++;\n        &#125;\n\n        return count;\n\n    &#125;\n&#125;</code></pre>\n\n","text":"分发饼干题目描述：假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。 对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j，都有一个尺寸 s[j] 。如果 s[j] &gt;= g[i]，我们可以将...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":105,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":111,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":105,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":11,"path":"api/tags/贪心算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2\"><span class=\"toc-text\">分发饼干</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Non—overlapping Intervals","uid":"0b469cb01192ec369bac9950f85cb59d","slug":"NonoverlappingIntervals","date":"2022-07-25T07:05:31.000Z","updated":"2022-07-25T07:15:26.096Z","comments":true,"path":"api/articles/NonoverlappingIntervals.json","keywords":null,"cover":null,"text":"435. Non-overlapping Intervals题目描述：Given an array of intervals intervals where intervals[i] &#x3D; [starti, endi], return the minimum number...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":105,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":111,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":105,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"平台开发所使用的前端组件工具","uid":"c37588bd65d4c5745225faacbe87ed1b","slug":"toolsInVue","date":"2022-07-22T13:14:49.000Z","updated":"2022-07-22T13:28:07.361Z","comments":true,"path":"api/articles/toolsInVue.json","keywords":null,"cover":null,"text":"平台开发中所使用到的Vue工具和组件vue-prism-editor1. 实现效果 可输入代码，并且代码语法高亮 支持编辑模式与不可编辑模式 2. 使用步骤 安装依赖 npm install vue-prism-editor 由于vue-prism-editor需要prismjs...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Web前端","slug":"Web前端","count":1,"path":"api/categories/Web前端.json"}],"tags":[{"name":"Vue","slug":"Vue","count":3,"path":"api/tags/Vue.json"},{"name":"模块","slug":"模块","count":1,"path":"api/tags/模块.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}