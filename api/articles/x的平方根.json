{"title":"x的平方根","uid":"3b8822123bb08af7e60b15ed39819f81","slug":"x的平方根","date":"2022-08-04T01:36:47.000Z","updated":"2022-08-06T01:27:29.371Z","comments":true,"path":"api/articles/x的平方根.json","keywords":null,"cover":null,"content":"<h1 id=\"69-x的平方根\"><a href=\"#69-x的平方根\" class=\"headerlink\" title=\"69. x的平方根\"></a>69. x的平方根</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>给你一个非负整数 x ，计算并返回 x 的 算术平方根 。</p>\n<p>由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。</p>\n<p>注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：x &#x3D; 4\n输出：2</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：x &#x3D; 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。</code></pre>\n\n\n\n<p>题目来源：<a href=\"https://leetcode.cn/problems/sqrtx\">https://leetcode.cn/problems/sqrtx</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int mySqrt(int x) &#123;\n        &#x2F;&#x2F;使用二分法来得到结果，初始边界是0~x，仅当mid平方小于等于x时，才有可能是最终结果\n        int left&#x3D;0;\n        int right&#x3D;x;\n        int result&#x3D;-1;\n\t\t\t&#x2F;*\n            为什么要加上&#x3D;的判断条件，因为将左指针和右指针相同的时候，就是判断指针本身和目标值是否相等。每当这里想不清楚的时候，就拿最简单的例子：1，2，3来做推理。要想知道3在不在他们中间，先比较3和2，然后3比2大，left &#x3D; mid + 1 &#x3D; 3，right &#x3D; right &#x3D; 3;这时候left 和 right相等，他们的中间也就是3,3&#x3D;3，于是3在他们中间，如果left &lt; right 就返回，就会返回错误的答案。\n            *&#x2F;\n        while(left&lt;&#x3D;right)&#123;\n            int mid&#x3D;(right+left)&#x2F;2;\n            if((long)mid*mid&lt;&#x3D;x)&#123;\n                &#x2F;&#x2F;因为返回值是整型，所以当平方小于x时，有可能是最终结果，需要暂存在result中。\n                result&#x3D;mid;\n                left&#x3D;mid+1;\n            &#125;else&#123;\n                right&#x3D;mid-1;\n            &#125;\n        &#125;\n        return result;\n\n    &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">int mid &#x3D; (left + right) &#x2F; 2; 与 int mid &#x3D; left + (right - left) &#x2F; 2; 二者的区别\n    二者结果一样，但是left + right 可能会溢出</code></pre>\n\n","feature":true,"text":"69. x的平方根题目描述：给你一个非负整数 x ，计算并返回 x 的 算术平方根 。 由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。 注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。 example 1: 输入...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":20,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":19,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#69-x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9\"><span class=\"toc-text\">69. x的平方根</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"寻找比目标字母大的最小字母","uid":"d776ea82847944d1f9a7d73d3912befe","slug":"寻找比目标字母大的最小字母","date":"2022-08-05T01:53:07.000Z","updated":"2022-08-06T01:43:21.118Z","comments":true,"path":"api/articles/寻找比目标字母大的最小字母.json","keywords":null,"cover":null,"text":"744. 寻找比目标字母大的最小字母题目描述：给你一个排序后的字符列表 letters ，列表中只包含小写英文字母。另给出一个目标字母 target，请你寻找在这一有序列表里比目标字母大的最小字母。 在比较时，字母是依序循环出现的。举个例子： 如果目标字母 target &#x3...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":20,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":19,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"划分字母区间","uid":"b3d8a41da3eeb7700876b944e097bd03","slug":"划分字母区间","date":"2022-08-03T02:16:17.000Z","updated":"2022-08-03T02:18:46.609Z","comments":true,"path":"api/articles/划分字母区间.json","keywords":null,"cover":null,"text":"763.划分字母区间题目描述：763. 划分字母区间字符串 S 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一字母最多出现在一个片段中。返回一个表示每个字符串片段的长度的列表。 example 1: 输入：S &#x3D; &quot;ababcbacadefegd...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":20,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":19,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}