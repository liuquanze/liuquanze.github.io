{"title":"203.移除链表元素","uid":"e036cd89658c33624bfd31dd2060c058","slug":"203-移除链表元素","date":"2022-08-20T01:35:04.000Z","updated":"2022-08-20T01:37:27.376Z","comments":true,"path":"api/articles/203-移除链表元素.json","keywords":null,"cover":null,"content":"<h1 id=\"203-移除链表元素\"><a href=\"#203-移除链表元素\" class=\"headerlink\" title=\"203.移除链表元素\"></a>203.移除链表元素</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><ol start=\"203\">\n<li>移除链表元素</li>\n</ol>\n<p>给你一个链表的头节点 <code>head</code> 和一个整数 <code>val</code> ，请你删除链表中所有满足 <code>Node.val == val</code> 的节点，并返回 <strong>新的头节点</strong> </p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：head &#x3D; [1,2,6,3,4,5,6], val &#x3D; 6\n输出：[1,2,3,4,5]</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：head &#x3D; [], val &#x3D; 1\n输出：[]</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：head &#x3D; [7,7,7,7], val &#x3D; 7\n输出：[]</code></pre>\n\n<p>提示：</p>\n<ul>\n<li>列表中的节点数目在范围 <code>[0, 104]</code> 内</li>\n<li><code>1 &lt;= Node.val &lt;= 50</code></li>\n<li><code>0 &lt;= val &lt;= 50</code></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/remove-linked-list-elements/\">https://leetcode.cn/problems/remove-linked-list-elements/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * Definition for singly-linked list.\n * public class ListNode &#123;\n *     int val;\n *     ListNode next;\n *     ListNode() &#123;&#125;\n *     ListNode(int val) &#123; this.val &#x3D; val; &#125;\n *     ListNode(int val, ListNode next) &#123; this.val &#x3D; val; this.next &#x3D; next; &#125;\n * &#125;\n *&#x2F;\nclass Solution &#123;\n    public ListNode removeElements(ListNode head, int val) &#123;\n        if(head&#x3D;&#x3D;null)&#123;\n            return null;\n        &#125;\n        &#x2F;&#x2F;创建一个虚拟头节点，目的是为了统一头结点的处理操作\n        ListNode fake_head&#x3D;new ListNode(-1,head);\n        &#x2F;&#x2F;左指针\n        ListNode pre&#x3D;fake_head;\n        &#x2F;&#x2F;右指针\n        ListNode sec&#x3D;head;\n        while(sec!&#x3D;null)&#123;\n            &#x2F;&#x2F;若当前右指针元素需要移除\n            if(sec.val&#x3D;&#x3D;val)&#123;\n                &#x2F;&#x2F;丢弃该元素,并将右指针向后移动一位\n                pre.next&#x3D;sec.next;\n                sec&#x3D;sec.next;\n            &#125;else&#123;\n                &#x2F;&#x2F;若该元素无须移除，则左右指针均向后移动一位\n                pre&#x3D;pre.next;\n                sec&#x3D;sec.next;\n            &#125;\n\n        &#125;\n        return fake_head.next;\n    &#125;\n&#125;</code></pre>\n\n","text":"203.移除链表元素题目描述： 移除链表元素 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 example 1: 输入：head &#x3D; [1,2,6,3,4,5,6], val &...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":81,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":84,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":80,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#203-%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">203.移除链表元素</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python语法错误01","uid":"aa4d739c1ac4e9cbdf52b62c4e456ed6","slug":"Python语法错误01","date":"2022-08-23T07:42:40.000Z","updated":"2022-08-23T07:52:45.870Z","comments":true,"path":"api/articles/Python语法错误01.json","keywords":null,"cover":null,"text":"Python语法错误01#出现语法错误一般是python版本问题，解决方案一般是两种 &quot;&quot;&quot; 1.修改python版本 2.修改代码语法 &quot;&quot;&quot; 1.except Exception, e: 语法无效except Exc...","link":"","photos":[],"count_time":{"symbolsCount":550,"symbolsTime":"1 mins."},"categories":[{"name":"实验","slug":"实验","count":1,"path":"api/categories/实验.json"}],"tags":[{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"},{"name":"语法错误","slug":"语法错误","count":1,"path":"api/tags/语法错误.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"416.分割等和子集","uid":"be7f5c6dc71f9de739df383de800893c","slug":"416-分割等和子集","date":"2022-08-20T01:04:47.000Z","updated":"2022-08-20T01:11:13.233Z","comments":true,"path":"api/articles/416-分割等和子集.json","keywords":null,"cover":null,"text":"416.分割等和子集题目描述： 分割等和子集 给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。 example 1: 输入：nums &#x3D; [1,5,11,5] 输出：true 解释：数组可以分割成 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":81,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":84,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":80,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}