{"title":"739.每日温度","uid":"6355be0900ada8ac56a8e9489858559d","slug":"739-每日温度","date":"2023-01-22T14:05:44.000Z","updated":"2023-01-22T14:09:21.400Z","comments":true,"path":"api/articles/739-每日温度.json","keywords":null,"cover":null,"content":"<h1 id=\"739-每日温度\"><a href=\"#739-每日温度\" class=\"headerlink\" title=\"739.每日温度\"></a>739.每日温度</h1><h2 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h2><ol start=\"739\">\n<li>每日温度</li>\n</ol>\n<p>给定一个整数数组 <code>temperatures</code> ，表示每天的温度，返回一个数组 <code>answer</code> ，其中 <code>answer[i]</code> 是指对于第 <code>i</code> 天，下一个更高温度出现在几天后。如果气温在这之后都不会升高，请在该位置用 <code>0</code> 来代替。</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: temperatures &#x3D; [73,74,75,71,69,72,76,73]\n输出: [1,1,4,2,1,1,0,0]</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: temperatures &#x3D; [30,40,50,60]\n输出: [1,1,1,0]</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入: temperatures &#x3D; [30,60,90]\n输出: [1,1,0]</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>1 &lt;= temperatures.length &lt;= 105</code></li>\n<li><code>30 &lt;= temperatures[i] &lt;= 100</code></li>\n</ul>\n<p>题目来源：</p>\n<p><a href=\"https://leetcode.cn/problems/daily-temperatures/description/\">https://leetcode.cn/problems/daily-temperatures/description/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;通常是一维数组，要寻找任一个元素的右边或者左边第一个比自己大或者小的元素的位置，此时我们就要想到可以用单调栈了\nclass Solution &#123;\n    public int[] dailyTemperatures(int[] temperatures) &#123;\n        \n        int lens&#x3D;temperatures.length;\n        int []res&#x3D;new int[lens];\n        \n        &#x2F;**\n        如果当前遍历的元素 大于栈顶元素，表示 栈顶元素的 右边的最大的元素就是 当前遍历的元素，\n        \t所以弹出 栈顶元素，并记录 \n        \t如果栈不空的话，还要考虑新的栈顶与当前元素的大小关系 \n        否则的话，可以直接入栈。\n        注意，单调栈里 加入的元素是 下标。\n        *&#x2F;\n        Deque&lt;Integer&gt; stack&#x3D;new LinkedList&lt;&gt;();\n        stack.push(0);\n        for(int i&#x3D;1;i&lt;lens;i++)&#123;\n            \n            if(temperatures[i]&lt;&#x3D;temperatures[stack.peek()])&#123;\n                stack.push(i);\n            &#125;else&#123;\n                while(!stack.isEmpty()&amp;&amp;temperatures[i]&gt;temperatures[stack.peek()])&#123;\n                    res[stack.peek()]&#x3D;i-stack.peek();\n                    stack.pop();\n                &#125;\n                stack.push(i);\n            &#125;\n        &#125;\n\n        return  res;\n    &#125;\n&#125;</code></pre>\n\n","text":"739.每日温度问题描述： 每日温度 给定一个整数数组 temperatures ，表示每天的温度，返回一个数组 answer ，其中 answer[i] 是指对于第 i 天，下一个更高温度出现在几天后。如果气温在这之后都不会升高，请在该位置用 0 来代替。 example 1:...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构和算法","slug":"数据结构和算法","count":3,"path":"api/categories/数据结构和算法.json"}],"tags":[{"name":"Java","slug":"Java","count":121,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":115,"path":"api/tags/leetcode.json"},{"name":"单调栈","slug":"单调栈","count":2,"path":"api/tags/单调栈.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#739-%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6\"><span class=\"toc-text\">739.每日温度</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">问题描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"496.下一个更大元素Ⅰ","uid":"815fb5e337edfb9e9850c316ed81cdac","slug":"496-下一个更大元素Ⅰ","date":"2023-01-23T04:22:44.000Z","updated":"2023-01-23T04:25:12.781Z","comments":true,"path":"api/articles/496-下一个更大元素Ⅰ.json","keywords":null,"cover":null,"text":"496.下一个更大元素Ⅰ问题描述： 下一个更大元素 I nums1 中数字 x 的 下一个更大元素 是指 x 在 nums2 中对应位置 右侧 的 第一个 比 x 大的元素。 给你两个 没有重复元素 的数组 nums1 和 nums2 ，下标从 0 开始计数，其中nums1 是 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":112,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":121,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":115,"path":"api/tags/leetcode.json"},{"name":"单调栈","slug":"单调栈","count":2,"path":"api/tags/单调栈.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"62.不同路径","uid":"c2410b2838d2b960665ad0be86344655","slug":"62-不同路径","date":"2023-01-16T14:31:26.000Z","updated":"2023-01-16T14:34:41.429Z","comments":true,"path":"api/articles/62-不同路径.json","keywords":null,"cover":null,"text":"题目描述： 不同路径 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。 问总共有多少条不同的路径？ example 1: 输入：m &...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构和算法","slug":"数据结构和算法","count":3,"path":"api/categories/数据结构和算法.json"}],"tags":[{"name":"Java","slug":"Java","count":121,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":12,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":115,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}