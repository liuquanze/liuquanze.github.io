{"title":"509.斐波那契数列","uid":"084b6d4a3eb1719c740e694cde17f8e9","slug":"斐波那契数列","date":"2022-08-13T03:54:49.000Z","updated":"2022-08-13T04:42:40.478Z","comments":true,"path":"api/articles/斐波那契数列.json","keywords":null,"cover":null,"content":"<h1 id=\"509-斐波那契数列\"><a href=\"#509-斐波那契数列\" class=\"headerlink\" title=\"509.斐波那契数列\"></a>509.斐波那契数列</h1><ol start=\"509\">\n<li>斐波那契数</li>\n</ol>\n<p><strong>斐波那契数</strong> （通常用 <code>F(n)</code> 表示）形成的序列称为 <strong>斐波那契数列</strong> 。该数列由 <code>0</code> 和 <code>1</code> 开始，后面的每一项数字都是前面两项数字的和。也就是：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">F(0) &#x3D; 0，F(1) &#x3D; 1\nF(n) &#x3D; F(n - 1) + F(n - 2)，其中 n &gt; 1</code></pre>\n\n<p>给定 <code>n</code> ，请计算 <code>F(n)</code> 。</p>\n<h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>example 1:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：n &#x3D; 2\n输出：1\n解释：F(2) &#x3D; F(1) + F(0) &#x3D; 1 + 0 &#x3D; 1</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：n &#x3D; 3\n输出：2\n解释：F(3) &#x3D; F(2) + F(1) &#x3D; 1 + 1 &#x3D; 2</code></pre>\n\n<p>example 3:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：n &#x3D; 4\n输出：3\n解释：F(4) &#x3D; F(3) + F(2) &#x3D; 2 + 1 &#x3D; 3</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>0 &lt;= n &lt;= 30</code></li>\n</ul>\n<p>题目来源：<a href=\"https://leetcode.cn/problems/fibonacci-number/\">https://leetcode.cn/problems/fibonacci-number/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int fib(int n) &#123;\n        if(n&lt;2)\n            return n;\n        &#x2F;&#x2F;确定dp数组，dp[i]\n        int[] dp&#x3D;new int[n+1];\n        &#x2F;&#x2F;确定递推公式，f(n)&#x3D;f(n-1)+f(n-2)\n        &#x2F;&#x2F;dp数组的初始化，dp[0]&#x3D;0,dp[1]&#x3D;1\n        dp[0]&#x3D;0;\n        dp[1]&#x3D;1;\n        for(int i&#x3D;2;i&lt;&#x3D;n;i++)&#123;\n            dp[i]&#x3D;dp[i-1]+dp[i-2];\n        &#125;\n        return dp[n];\n\n    &#125;\n&#125;</code></pre>\n\n","text":"509.斐波那契数列 斐波那契数 斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是： F(0) &#x3D; 0，F(1) &#x3D; 1 F(n) &#x3D; F(n - 1) +...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":70,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":73,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":69,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#509-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97\"><span class=\"toc-text\">509.斐波那契数列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"70.爬楼梯","uid":"51d051a502cdfcaa3007846e503519d5","slug":"70-爬楼梯","date":"2022-08-13T04:05:38.000Z","updated":"2022-08-13T04:42:49.199Z","comments":true,"path":"api/articles/70-爬楼梯.json","keywords":null,"cover":null,"text":"70.爬楼梯题目描述： 爬楼梯 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ example 1: 输入：n &#x3D; 2 输出：2 解释：有两种方法可以爬到楼顶。 1. 1 阶 + 1 阶 2. 2 ...","link":"","photos":[],"count_time":{"symbolsCount":777,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":70,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":73,"path":"api/tags/Java.json"},{"name":"动态规划","slug":"动态规划","count":7,"path":"api/tags/动态规划.json"},{"name":"leetcode","slug":"leetcode","count":69,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"1091.二进制矩阵中的最短路径","uid":"401c664502fc1c05444b73fd7436e5f7","slug":"1091-二进制矩阵中的最短路径","date":"2022-08-13T02:39:07.000Z","updated":"2022-08-13T02:45:44.716Z","comments":true,"path":"api/articles/1091-二进制矩阵中的最短路径.json","keywords":null,"cover":null,"text":"1091.二进制矩阵中的最短路径题目描述： 二进制矩阵中的最短路径 难度中等214收藏分享切换为英文接收动态反馈 给你一个 n x n 的二进制矩阵 grid 中，返回矩阵中最短 畅通路径 的长度。如果不存在这样的路径，返回 -1 。 二进制矩阵中的 畅通路径 是一条从 左上角 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":70,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":73,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":69,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}