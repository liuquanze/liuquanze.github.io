{"title":"860.柠檬水找零","uid":"f4bc994415987b6fe405c0f307a1279e","slug":"860-柠檬水找零","date":"2022-12-18T12:40:17.000Z","updated":"2022-12-18T12:44:14.170Z","comments":true,"path":"api/articles/860-柠檬水找零.json","keywords":null,"cover":null,"content":"<h1 id=\"860-柠檬水找零\"><a href=\"#860-柠檬水找零\" class=\"headerlink\" title=\"860.柠檬水找零\"></a>860.柠檬水找零</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><ol start=\"860\">\n<li>柠檬水找零</li>\n</ol>\n<p>在柠檬水摊上，每一杯柠檬水的售价为 <code>5</code> 美元。顾客排队购买你的产品，（按账单 <code>bills</code> 支付的顺序）一次购买一杯。</p>\n<p>每位顾客只买一杯柠檬水，然后向你付 <code>5</code> 美元、<code>10</code> 美元或 <code>20</code> 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 <code>5</code> 美元。</p>\n<p>注意，一开始你手头没有任何零钱。</p>\n<p>给你一个整数数组 <code>bills</code> ，其中 <code>bills[i]</code> 是第 <code>i</code> 位顾客付的账。如果你能给每位顾客正确找零，返回 <code>true</code> ，否则返回 <code>false</code> 。</p>\n<p>example 1：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：bills &#x3D; [5,5,5,10,20]\n输出：true\n解释：\n前 3 位顾客那里，我们按顺序收取 3 张 5 美元的钞票。\n第 4 位顾客那里，我们收取一张 10 美元的钞票，并返还 5 美元。\n第 5 位顾客那里，我们找还一张 10 美元的钞票和一张 5 美元的钞票。\n由于所有客户都得到了正确的找零，所以我们输出 true。</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">输入：bills &#x3D; [5,5,10,10,20]\n输出：false\n解释：\n前 2 位顾客那里，我们按顺序收取 2 张 5 美元的钞票。\n对于接下来的 2 位顾客，我们收取一张 10 美元的钞票，然后返还 5 美元。\n对于最后一位顾客，我们无法退回 15 美元，因为我们现在只有两张 10 美元的钞票。\n由于不是每位顾客都得到了正确的找零，所以答案是 false。</code></pre>\n\n<p>提示：</p>\n<ul>\n<li><code>1 &lt;= bills.length &lt;= 105</code></li>\n<li><code>bills[i]</code> 不是 <code>5</code> 就是 <code>10</code> 或是 <code>20</code></li>\n</ul>\n<p>题目来源：<a href=\"https://leetcode.cn/problems/lemonade-change/description/\">https://leetcode.cn/problems/lemonade-change/description/</a></p>\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean lemonadeChange(int[] bills) &#123;\n        &#x2F;&#x2F;初始三类纸币数量都为0\n        int[] restChange&#x3D;new int[3];\n        &#x2F;&#x2F;当5元和10元的纸币数量为负数时，返回false，否则为true\n        for(int i&#x3D;0;i&lt;bills.length;i++)&#123;\n            &#x2F;&#x2F;先找钱\n            &#x2F;&#x2F;计算需要找的钱\n            int change&#x3D;bills[i]-5;\n            \n            if(change&#x3D;&#x3D;5) restChange[0]--;\n            if(change&#x3D;&#x3D;15)&#123;\n                &#x2F;&#x2F;注意当我需要找15元的时候，有十块时，找钱的组合是10+5，没10块时，找钱的组合是5+5+5\n                if(restChange[1]&gt;0)&#123;\n                    restChange[1]--;\n                    restChange[0]--;\n                &#125;else&#123;\n                    restChange[0]-&#x3D;3;\n                &#125;\n            &#125;\n            &#x2F;&#x2F;后收钱\n            if(bills[i]&#x3D;&#x3D;5) restChange[0]++;\n            if(bills[i]&#x3D;&#x3D;10) restChange[1]++;\n            if(bills[i]&#x3D;&#x3D;20) restChange[2]++;\n            \n            if(restChange[0]&lt;0||restChange[1]&lt;0)&#123;\n                return false;\n            &#125;\n        &#125;\n        return true;\n\n    &#125;\n&#125;</code></pre>\n\n","text":"860.柠檬水找零题目描述： 柠檬水找零 在柠檬水摊上，每一杯柠檬水的售价为 5 美元。顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。 每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":111,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":120,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":114,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#860-%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6\"><span class=\"toc-text\">860.柠檬水找零</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"406.根据身高重建队列","uid":"6d39faed18394c3054176cba486feae5","slug":"406-根据身高重建队列","date":"2022-12-19T13:34:04.000Z","updated":"2022-12-19T13:37:49.949Z","comments":true,"path":"api/articles/406-根据身高重建队列.json","keywords":null,"cover":null,"text":"406.根据身高重建队列题目描述 根据身高重建队列 假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] = [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":111,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":120,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":114,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"135.分发糖果","uid":"1aae7d13b3ffa5a2f6f89a93b626eafb","slug":"135-分发糖果","date":"2022-12-17T11:18:01.000Z","updated":"2022-12-17T11:22:35.116Z","comments":true,"path":"api/articles/135-分发糖果.json","keywords":null,"cover":null,"text":"135.分发糖果问题描述： 分发糖果 n 个孩子站成一排。给你一个整数数组 ratings 表示每个孩子的评分。 你需要按照以下要求，给这些孩子分发糖果： 每个孩子至少分配到 1 个糖果。 相邻两个孩子评分更高的孩子会获得更多的糖果。 请你给每个孩子分发糖果，计算并返回需要准备的...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结果与算法","slug":"数据结果与算法","count":1,"path":"api/categories/数据结果与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":120,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":114,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":15,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}