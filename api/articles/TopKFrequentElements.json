{"title":"Top K Frequent Elements","uid":"457fe231ac1330559343c50bbf83f171","slug":"TopKFrequentElements","date":"2022-07-21T01:11:44.000Z","updated":"2022-07-21T01:15:31.750Z","comments":true,"path":"api/articles/TopKFrequentElements.json","keywords":null,"cover":null,"content":"<h1 id=\"Top-K-Frequent-Elements\"><a href=\"#Top-K-Frequent-Elements\" class=\"headerlink\" title=\"Top K Frequent Elements\"></a>Top K Frequent Elements</h1><h2 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h2><p>Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.</p>\n<p>example 1:</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Input: nums &#x3D; [1,1,1,2,2,3], k &#x3D; 2\nOutput: [1,2]</code></pre>\n\n<p>example 2:</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Input: nums &#x3D; [1], k &#x3D; 1\nOutput: [1]</code></pre>\n\n\n\n<h2 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int[] topKFrequent(int[] nums, int k) &#123;\n        &#x2F;&#x2F;创建map，记录元素及其出现次数\n       Map&lt;Integer,Integer&gt; map&#x3D;new HashMap&lt;Integer,Integer&gt;();\n       for(int num:nums)&#123;\n           map.put(num,map.getOrDefault(num,0)+1);\n       &#125;\n       &#x2F;&#x2F;创建结构为小根堆的优先队列，队列元素为一个大小为2的数组，[0]表示元素，[1]表示出现次数\n       &#x2F;&#x2F;这里创建优先队列时，由于队列中的元素类型并非整型，所以需要传入比较器，规定比较规则\n       PriorityQueue&lt;int[]&gt; queue&#x3D;new PriorityQueue&lt;int[]&gt;(new Comparator&lt;int[]&gt;()&#123;\n           public int compare(int[] m,int[] n)&#123;\n               return m[1]-n[1];\n           &#125;\n       &#125;);\n        &#x2F;&#x2F;将map中的键值对存入优先队列\n       for(Map.Entry&lt;Integer,Integer&gt; entry:map.entrySet())&#123;\n           int key&#x3D;entry.getKey();\n           int value&#x3D;entry.getValue();\n           &#x2F;&#x2F;若队列已满，则需要判断是否需要替换\n           if(k&#x3D;&#x3D;queue.size())&#123;\n               &#x2F;&#x2F;若当前元素出现次数小于堆顶元素，则表示堆内元素出现次数均大于key，则无需替换，否则需要替换堆顶元素\n               if(value&gt;queue.peek()[1])&#123;\n                   queue.poll();\n                   queue.offer(new int[]&#123;key,value&#125;);\n               &#125;\n           &#125;else&#123;   &#x2F;&#x2F;若队列元素个数小于k，则直接加入队列中\n               \n               queue.offer(new int[]&#123;key,value&#125;);\n           &#125;\n       &#125;\n       &#x2F;&#x2F;将队列中维护的元素存入ret数组并返回\n        int[] ret&#x3D;new int[k];\n       for(int i&#x3D;0;i&lt;k;i++)&#123;\n           ret[i]&#x3D;queue.poll()[0];\n       &#125;\n       return ret;\n       \n\n    &#125;\n\n\n   \n&#125;</code></pre>\n\n\n\n\n\n","text":"Top K Frequent Elements题目描述：Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":99,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":104,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":98,"path":"api/tags/leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Top-K-Frequent-Elements\"><span class=\"toc-text\">Top K Frequent Elements</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">题目描述：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">题解：</span></a></li></ol></li></ol>","author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Sort Characters By Frequency","uid":"95fb99a87b0934d93a7b934555997ee9","slug":"SortCharactersByFrequency","date":"2022-07-21T02:12:13.000Z","updated":"2022-07-21T03:10:06.262Z","comments":true,"path":"api/articles/SortCharactersByFrequency.json","keywords":null,"cover":null,"text":"Sort Characters By Frequency题目描述：Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a ...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":99,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":104,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":98,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},"next_post":{"title":"Kth Largest Element in an Array——堆排序","uid":"b11e16d08ad1418b22f0f4722489b2fa","slug":"FindKthLargest01","date":"2022-07-21T00:45:06.000Z","updated":"2022-07-21T00:56:37.025Z","comments":true,"path":"api/articles/FindKthLargest01.json","keywords":null,"cover":null,"text":"Kth Largest Element in an Array——堆排序题目描述：Given an integer array nums and an integer k, return the kth largest element in the array. Note tha...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":99,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":104,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":98,"path":"api/tags/leetcode.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}}