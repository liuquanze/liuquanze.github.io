{"name":"贪心算法","slug":"贪心算法","count":7,"postlist":[{"title":"1005.K次取反后最大化的数组和","uid":"684490a86ab5f156b0b9d2e5dc331300","slug":"1005-K次取反后最大化的数组和","date":"2022-12-11T13:26:50.000Z","updated":"2022-12-11T13:29:08.669Z","comments":true,"path":"api/articles/1005-K次取反后最大化的数组和.json","keywords":null,"cover":null,"text":"1005.K次取反后最大化的数组和题目描述： K 次取反后最大化的数组和 给你一个整数数组 nums 和一个整数 k ，按以下方法修改该数组： 选择某个下标 i 并将 nums[i] 替换为 -nums[i] 。 重复这个过程恰好 k 次。可以多次选择同一个下标 i 。 以这种方...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"134.加油站","uid":"d6d0de907a6cde5432aeecaa7255f84f","slug":"134-加油站","date":"2022-12-16T14:02:43.000Z","updated":"2022-12-16T14:05:41.723Z","comments":true,"path":"api/articles/134-加油站.json","keywords":null,"cover":null,"text":"134.加油站题目描述： 加油站 在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。 你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。 给定两个整数数组 ...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"376.摆动序列","uid":"872b236e099a38439f77f6b1b2e6e4dd","slug":"376-摆动序列","date":"2022-12-01T15:06:49.000Z","updated":"2022-12-01T15:12:14.867Z","comments":true,"path":"api/articles/376-摆动序列.json","keywords":null,"cover":null,"text":"376.摆动序列题目描述： 摆动序列 如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为 摆动序列 。第一个差（如果存在的话）可能是正数或负数。仅有一个元素或者含两个不等元素的序列也视作摆动序列。 例如， [1, 7, 4, 9, 2, 5] 是一个 摆动序列 ，因为...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"45.跳跃游戏Ⅱ","uid":"ba77919bcc2d7461bb50d4a40ab33900","slug":"45-跳跃游戏Ⅱ","date":"2022-12-07T13:21:22.000Z","updated":"2022-12-07T13:23:20.934Z","comments":true,"path":"api/articles/45-跳跃游戏Ⅱ.json","keywords":null,"cover":null,"text":"45.跳跃游戏Ⅱ题目描述： 跳跃游戏 II 给你一个非负整数数组 nums ，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 你的目标是使用最少的跳跃次数到达数组的最后一个位置。 假设你总是可以到达数组的最后一个位置。 example1 ： 输入...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"53.最大子数组和","uid":"616c86b7fd44020d5709f34410a56e33","slug":"53-最大子数组和","date":"2022-12-03T14:21:26.000Z","updated":"2022-12-03T14:24:22.249Z","comments":true,"path":"api/articles/53-最大子数组和.json","keywords":null,"cover":null,"text":"53.最大子数组和题目描述： 最大子数组和 给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 子数组 是数组中的一个连续部分。 example 1: 输入：nums &#x3D; [-2,1,-3,4,-1,2,1,-5,...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"55.跳跃游戏","uid":"533fd882f71315e5bf31b51d128773b6","slug":"55-跳跃游戏","date":"2022-12-05T13:16:58.000Z","updated":"2022-12-05T13:20:09.987Z","comments":true,"path":"api/articles/55-跳跃游戏.json","keywords":null,"cover":null,"text":"55.跳跃游戏题目描述： 跳跃游戏 给定一个非负整数数组 nums ，你最初位于数组的 第一个下标 。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 判断你是否能够到达最后一个下标。 example 1: 输入：nums &#x3D; [2,3,1,1,4] 输出：true...","link":"","photos":[],"count_time":{"symbolsCount":897,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"分发饼干","uid":"3251d0dcefb4f9336a7d11d448387586","slug":"Assign-Cookies","date":"2022-07-24T00:59:12.000Z","updated":"2022-11-30T03:08:45.775Z","comments":true,"path":"api/articles/Assign-Cookies.json","keywords":null,"cover":null,"text":"分发饼干题目描述：假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。 对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j，都有一个尺寸 s[j] 。如果 s[j] &gt;= g[i]，我们可以将...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":102,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":107,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":101,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":7,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}