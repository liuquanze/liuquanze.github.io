{"name":"贪心算法","slug":"贪心算法","count":12,"postlist":[{"title":"1005.K次取反后最大化的数组和","uid":"684490a86ab5f156b0b9d2e5dc331300","slug":"1005-K次取反后最大化的数组和","date":"2022-12-11T13:26:50.000Z","updated":"2022-12-11T13:29:08.669Z","comments":true,"path":"api/articles/1005-K次取反后最大化的数组和.json","keywords":null,"cover":null,"text":"1005.K次取反后最大化的数组和题目描述： K 次取反后最大化的数组和 给你一个整数数组 nums 和一个整数 k ，按以下方法修改该数组： 选择某个下标 i 并将 nums[i] 替换为 -nums[i] 。 重复这个过程恰好 k 次。可以多次选择同一个下标 i 。 以这种方...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"134.加油站","uid":"d6d0de907a6cde5432aeecaa7255f84f","slug":"134-加油站","date":"2022-12-16T14:02:43.000Z","updated":"2022-12-16T14:05:41.723Z","comments":true,"path":"api/articles/134-加油站.json","keywords":null,"cover":null,"text":"134.加油站题目描述： 加油站 在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。 你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。 给定两个整数数组 ...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"135.分发糖果","uid":"1aae7d13b3ffa5a2f6f89a93b626eafb","slug":"135-分发糖果","date":"2022-12-17T11:18:01.000Z","updated":"2022-12-17T11:22:35.116Z","comments":true,"path":"api/articles/135-分发糖果.json","keywords":null,"cover":null,"text":"135.分发糖果问题描述： 分发糖果 n 个孩子站成一排。给你一个整数数组 ratings 表示每个孩子的评分。 你需要按照以下要求，给这些孩子分发糖果： 每个孩子至少分配到 1 个糖果。 相邻两个孩子评分更高的孩子会获得更多的糖果。 请你给每个孩子分发糖果，计算并返回需要准备的...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结果与算法","slug":"数据结果与算法","count":1,"path":"api/categories/数据结果与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"376.摆动序列","uid":"872b236e099a38439f77f6b1b2e6e4dd","slug":"376-摆动序列","date":"2022-12-01T15:06:49.000Z","updated":"2022-12-01T15:12:14.867Z","comments":true,"path":"api/articles/376-摆动序列.json","keywords":null,"cover":null,"text":"376.摆动序列题目描述： 摆动序列 如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为 摆动序列 。第一个差（如果存在的话）可能是正数或负数。仅有一个元素或者含两个不等元素的序列也视作摆动序列。 例如， [1, 7, 4, 9, 2, 5] 是一个 摆动序列 ，因为...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"406.根据身高重建队列","uid":"6d39faed18394c3054176cba486feae5","slug":"406-根据身高重建队列","date":"2022-12-19T13:34:04.000Z","updated":"2022-12-19T13:37:49.949Z","comments":true,"path":"api/articles/406-根据身高重建队列.json","keywords":null,"cover":null,"text":"406.根据身高重建队列题目描述 根据身高重建队列 假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] = [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"435.无重叠区间","uid":"839a3a8f14077c9f4a60c6ddbc52816e","slug":"435-无重叠区间","date":"2022-12-21T14:23:54.000Z","updated":"2022-12-21T14:26:37.687Z","comments":true,"path":"api/articles/435-无重叠区间.json","keywords":null,"cover":null,"text":"435.无重叠区间题目描述： 无重叠区间 给定一个区间的集合 intervals ，其中 intervals[i] = [starti, endi] 。返回 需要移除区间的最小数量，使剩余区间互不重叠 。 example 1： 输入: intervals &#x3D; [[1,2...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"45.跳跃游戏Ⅱ","uid":"ba77919bcc2d7461bb50d4a40ab33900","slug":"45-跳跃游戏Ⅱ","date":"2022-12-07T13:21:22.000Z","updated":"2022-12-07T13:23:20.934Z","comments":true,"path":"api/articles/45-跳跃游戏Ⅱ.json","keywords":null,"cover":null,"text":"45.跳跃游戏Ⅱ题目描述： 跳跃游戏 II 给你一个非负整数数组 nums ，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 你的目标是使用最少的跳跃次数到达数组的最后一个位置。 假设你总是可以到达数组的最后一个位置。 example1 ： 输入...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"452.用最少数量的箭引爆气球","uid":"e4f64fdd68d0e2cde5cecce7c3e76096","slug":"452-用最少数量的箭引爆气球","date":"2022-12-20T12:00:52.000Z","updated":"2022-12-20T12:03:07.557Z","comments":true,"path":"api/articles/452-用最少数量的箭引爆气球.json","keywords":null,"cover":null,"text":"452.用最少数量的箭引爆气球题目描述： 用最少数量的箭引爆气球 有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 points ，其中points[i] = [xstart, xend] 表示水平直径在 xstart 和 xend之间的气球。你不知道...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"53.最大子数组和","uid":"616c86b7fd44020d5709f34410a56e33","slug":"53-最大子数组和","date":"2022-12-03T14:21:26.000Z","updated":"2022-12-03T14:24:22.249Z","comments":true,"path":"api/articles/53-最大子数组和.json","keywords":null,"cover":null,"text":"53.最大子数组和题目描述： 最大子数组和 给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 子数组 是数组中的一个连续部分。 example 1: 输入：nums &#x3D; [-2,1,-3,4,-1,2,1,-5,...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"55.跳跃游戏","uid":"533fd882f71315e5bf31b51d128773b6","slug":"55-跳跃游戏","date":"2022-12-05T13:16:58.000Z","updated":"2022-12-05T13:20:09.987Z","comments":true,"path":"api/articles/55-跳跃游戏.json","keywords":null,"cover":null,"text":"55.跳跃游戏题目描述： 跳跃游戏 给定一个非负整数数组 nums ，你最初位于数组的 第一个下标 。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 判断你是否能够到达最后一个下标。 example 1: 输入：nums &#x3D; [2,3,1,1,4] 输出：true...","link":"","photos":[],"count_time":{"symbolsCount":897,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"860.柠檬水找零","uid":"f4bc994415987b6fe405c0f307a1279e","slug":"860-柠檬水找零","date":"2022-12-18T12:40:17.000Z","updated":"2022-12-18T12:44:14.170Z","comments":true,"path":"api/articles/860-柠檬水找零.json","keywords":null,"cover":null,"text":"860.柠檬水找零题目描述： 柠檬水找零 在柠檬水摊上，每一杯柠檬水的售价为 5 美元。顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。 每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"分发饼干","uid":"3251d0dcefb4f9336a7d11d448387586","slug":"Assign-Cookies","date":"2022-07-24T00:59:12.000Z","updated":"2022-11-30T03:08:45.775Z","comments":true,"path":"api/articles/Assign-Cookies.json","keywords":null,"cover":null,"text":"分发饼干题目描述：假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。 对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j，都有一个尺寸 s[j] 。如果 s[j] &gt;= g[i]，我们可以将...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":106,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":112,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":106,"path":"api/tags/leetcode.json"},{"name":"贪心算法","slug":"贪心算法","count":12,"path":"api/tags/贪心算法.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}}]}