{"name":"链表","slug":"链表","count":3,"postlist":[{"title":"203.移除链表元素","uid":"e036cd89658c33624bfd31dd2060c058","slug":"203-移除链表元素","date":"2022-08-20T01:35:04.000Z","updated":"2022-08-20T01:37:27.376Z","comments":true,"path":"api/articles/203-移除链表元素.json","keywords":null,"cover":null,"text":"203.移除链表元素题目描述： 移除链表元素 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 example 1: 输入：head &#x3D; [1,2,6,3,4,5,6], val &...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":43,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":45,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":41,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}}},{"title":"206.反转链表","uid":"04d169a11d3cee4253a53c23de1dbd14","slug":"206-反转链表","date":"2022-08-23T13:56:14.000Z","updated":"2022-08-24T14:48:10.396Z","comments":true,"path":"api/articles/206-反转链表.json","keywords":null,"cover":null,"text":"206.反转链表题目描述： 反转链表 给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。 example 1: 输入：head &#x3D; [1,2,3,4,5] 输出：[5,4,3,2,1] example 2: 输入：head &#x3D; [1,2] 输出...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":43,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":45,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":41,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true},{"title":"24.两两交换链表中的节点","uid":"997023f756e83c602ad393bfa331d66a","slug":"24-两两交换链表中的节点","date":"2022-08-24T14:35:56.000Z","updated":"2022-08-24T14:47:27.759Z","comments":true,"path":"api/articles/24-两两交换链表中的节点.json","keywords":null,"cover":null,"text":"24.两两交换链表中的节点题目描述： 两两交换链表中的节点 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。 example1: 输入：head &#x3D; [1,2,3,4] 输出：[2,1,...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":43,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"Java","slug":"Java","count":45,"path":"api/tags/Java.json"},{"name":"leetcode","slug":"leetcode","count":41,"path":"api/tags/leetcode.json"},{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"}],"author":{"name":"LiuQuanZe","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"a good guy!","socials":{"github":"https://github.com/liuquanze","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45895853","juejin":"","customs":{}}},"feature":true}]}